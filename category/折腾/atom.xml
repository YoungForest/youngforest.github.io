<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://youngforest.github.io</id>
    <title>YoungForest&#39;s blog • Posts by &#34;折腾&#34; category</title>
    <link href="https://youngforest.github.io" />
    <updated>2021-10-13T04:39:31.000Z</updated>
    <category term="tech" />
    <category term="life" />
    <category term="年终总结" />
    <category term="intern" />
    <category term="Reading" />
    <category term="3 body" />
    <category term="全球通史" />
    <category term="迷人的温度" />
    <category term="kuaishou" />
    <category term="Alibaba" />
    <category term="travel" />
    <category term="游记" />
    <category term="反脆弱" />
    <category term="你的灯亮着吗" />
    <category term="北京" />
    <category term="户口" />
    <category term="Business cycles history theory and investment reality" />
    <category term="Economics" />
    <category term="ByteDance" />
    <category term="interview" />
    <category term="New Graduate" />
    <category term="深奥的简洁" />
    <category term="codeforces" />
    <category term="contest" />
    <category term="Weride" />
    <category term="C++" />
    <category term="Database" />
    <category term="Django" />
    <category term="C++11" />
    <category term="埃隆·马斯克传" />
    <category term="bank" />
    <category term="money" />
    <category term="Europe" />
    <category term="Tech" />
    <category term="Hexo" />
    <category term="枪炮、病菌与钢铁" />
    <category term="厚黑学" />
    <category term="Ireland" />
    <category term="Life" />
    <category term="法国签证" />
    <category term="法签" />
    <category term="申根签证" />
    <category term="Side Project" />
    <category term="持续买进" />
    <category term="Competitive Programming" />
    <category term="Algorithm" />
    <category term="LeetCode" />
    <category term="六神磊磊读金庸" />
    <category term="六神磊磊读唐诗" />
    <category term="Mihayo" />
    <category term="键盘" />
    <category term="穷查理宝典" />
    <category term="编程珠玑" />
    <category term="投资" />
    <category term="QDII" />
    <category term="套利" />
    <category term="场外转场内" />
    <category term="Investment" />
    <category term="现实不似你所见-量子引力之旅" />
    <category term="食南之徒" />
    <category term="马伯庸" />
    <category term="太白金星有点烦" />
    <category term="Tencent" />
    <category term="纳瓦尔宝典" />
    <category term="孙子兵法" />
    <category term="历代经济变革得失" />
    <category term="Linux" />
    <category term="国家为什么失败" />
    <category term="时势" />
    <category term="小Lin说" />
    <category term="碧血剑" />
    <category term="atom" />
    <category term="hash" />
    <category term="unordered_map" />
    <category term="English" />
    <category term="折腾" />
    <category term="旷视" />
    <category term="Amazon" />
    <category term="Microsoft" />
    <category term="China" />
    <category term="vim" />
    <category term="WeRide" />
    <category term="tex" />
    <category term="生死疲劳" />
    <category term="Mac" />
    <category term="Windows" />
    <category term="Ubuntu" />
    <category term="Owncloud" />
    <category term="benchmark" />
    <category term="RIP" />
    <category term="sensetime" />
    <category term="sublime" />
    <category term="vscode" />
    <category term="gcc" />
    <category term="git" />
    <entry>
        <id>https://youngforest.github.io/2021/10/13/Niz-plum-option-key-not-work/</id>
        <title>Niz plum option key 在蓝牙模式下不响应</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/10/13/Niz-plum-option-key-not-work/"/>
        <content type="html">&lt;p&gt;最近使用我心爱的Niz Plum 66键盘时遇到一个奇怪的bug。&lt;br /&gt;
在蓝牙模式下，左option键失灵。因为我hammerspoon和其他应用的快捷键大量使用，虽然偶尔可以通过右option键短暂替代。但总不是回事儿，工作效率大幅降低。&lt;/p&gt;
&lt;p&gt;这个bug的引入我也不确定是如何来的。大概是我Mac开始连2个外界显示器开始的。&lt;br /&gt;
奇怪的是，有线模式并没有问题。而且我试过蓝牙断开重连也并没有修复。换个蓝牙通道也无济于事。&lt;/p&gt;
&lt;p&gt;我在网络上进行了大量的搜索，并没有找到类似的问题和解决方案。最终还是在自己的不断摸索下成功修复了。因此记录下来，以防止未来再次遇到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://yunxii.cn/2019/08/12/plum%E9%9D%99%E7%94%B5%E5%AE%B9%E9%94%AE%E7%9B%9866%E9%94%AE%E8%AF%B4%E6%98%8E%E4%B9%A6/&#34;&gt;参考说明书&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;恢复出厂设置: 同时按住键盘四角的四个键5秒钟。&lt;/li&gt;
&lt;li&gt;键盘开机，连接Mac。&lt;/li&gt;
&lt;li&gt;重新配置键盘设置, 如我的如下:
&lt;ul&gt;
&lt;li&gt;Fn + Command 从默认的Windows键位切换回Mac&lt;/li&gt;
&lt;li&gt;Fn + ] 降低按键延迟&lt;/li&gt;
&lt;li&gt;Fn + 右Shift 将右shift转成&lt;code&gt;shift&lt;/code&gt;而非默认的 Up&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;左Option键已成功修复。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;敬请享受自己的键盘吧！&lt;/p&gt;
</content>
        <category term="键盘" />
        <updated>2021-10-13T04:39:31.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2021/09/07/Setup-English-blog/</id>
        <title>Hexo 创建中英文博客</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/09/07/Setup-English-blog/"/>
        <content type="html">&lt;p&gt;自从来到亚马逊工作，接触英文和外国同事比较多。锻炼使用英语的需求越来越大。而且为了和国际接轨，我决定创建自己的英文博客。&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#步骤&#34;&gt;&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;p&gt;以中文博客为模版，创建英文博客。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; -r Hexo HexoEn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;删除HexoEn中没用的中文博文和资源。&lt;/p&gt;
&lt;p&gt;在Github创建一个新repo：“en”.&lt;/p&gt;
&lt;p&gt;修改HexoEn &lt;code&gt;_config.yml&lt;/code&gt;配置文件。注意部署分支为&lt;code&gt;gh-pages&lt;/code&gt;, 这个GitHub默认的pages分支，如果不同的话，需要去repo的&lt;code&gt;Setting-&amp;gt;Pages&lt;/code&gt;配置一下你自定义的分支:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;language:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;en&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;repo:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;git@github.com:YoungForest/en.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;branch:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;gh-pages&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;theme_config:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;about:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/about/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/tags/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/categories/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-th&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;archives:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/archives/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;中文:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://youngforest.github.io&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-language&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 图标可以去该网站搜索：https://fontawesome.com/v4.7/icons/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;中文Hexo &lt;code&gt;_config.yml&lt;/code&gt;配置文件:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;language:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;zh-CN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;en&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;theme_config:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;menu:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-home&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;about:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/about/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/tags/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-tags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/categories/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-th&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;archives:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/archives/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-archive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;English:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://youngforest.github.io/en/&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fa-globe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样中英文博客就可以在Menu互相外链了。&lt;/p&gt;
&lt;p&gt;部署博客，看看效果如何。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo generate -d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把HexoEn也推到远端，做保存和同步。注意，这里和deploy用的是同一个repo, 但是不同的分支。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote remove origin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin git@github.com:YoungForest/en.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后的效果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后的效果&#34;&gt;&lt;/a&gt; 最后的效果&lt;/h2&gt;
&lt;p&gt;中文博客：&lt;a href=&#34;https://youngforest.github.io&#34;&gt;https://youngforest.github.io&lt;/a&gt;&lt;br /&gt;
英文博客：&lt;a href=&#34;https://youngforest.github.io/en/&#34;&gt;https://youngforest.github.io/en/&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Hexo" />
        <updated>2021-09-07T09:50:49.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2021/04/01/BUAA-daily-health-report/</id>
        <title>BUAA daily health report</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/04/01/BUAA-daily-health-report/"/>
        <content type="html">&lt;p&gt;Auto daily health report solution for BUAA.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;报告脚本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#报告脚本&#34;&gt;&lt;/a&gt; 报告脚本&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Accept&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;application/json, text/javascript, */*; q=0.01&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Accept-Encoding&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;gzip, deflate, br&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Accept-Language&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;zh-CN,zh;q=0.9,en;q=0.8&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Content-Type&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;application/x-www-form-urlencoded; charset=UTF-8&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Host&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;app.buaa.edu.cn&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Sec-Fetch-Dest&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;empty&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Sec-Fetch-Mode&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;cors&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;Sec-Fetch-Site&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;same-origin&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;User-Agent&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/80.0.3987.87 Chrome/80.0.3987.87 Safari/537.36&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;X-Requested-With&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;XMLHttpRequest&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;report&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;uesrname, password, dataform&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x = requests.session()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# login, fetch cookies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(time.strftime(&lt;span class=&#34;string&#34;&gt;&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;&lt;/span&gt;, time.localtime()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Logging in......&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rep = x.post(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;https://app.buaa.edu.cn/uc/wap/login/check&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        data=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;: uesrname,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;: password &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        headers=headers,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        timeout=&lt;span class=&#34;number&#34;&gt;360&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(rep.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(rep.status_code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Save report......&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    saveReport = x.post(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;https://app.buaa.edu.cn/buaaxsncov/wap/default/save&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        headers=headers,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        data = dataform&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(saveReport.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(saveReport.status_code)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;content = &lt;span class=&#34;string&#34;&gt;&amp;#x27;sfzs=1&amp;amp;bzxyy=&amp;amp;bzxyy_other=&amp;amp;brsfzc=1&amp;amp;tw=&amp;amp;sfcxzz=&amp;amp;zdjg=&amp;amp;zdjg_other=&amp;amp;sfgl=&amp;amp;gldd=&amp;amp;gldd_other=&amp;amp;glyy=&amp;amp;glyy_other=&amp;amp;gl_start=&amp;amp;gl_end=&amp;amp;sfmqjc=&amp;amp;sfzc_14=1&amp;amp;sfqw_14=0&amp;amp;sfqw_14_remark=&amp;amp;sfzgfx=0&amp;amp;sfzgfx_remark=&amp;amp;sfjc_14=0&amp;amp;sfjc_14_remark=&amp;amp;sfjcqz_14=0&amp;amp;sfjcqz_14_remark=&amp;amp;sfgtjz_14=0&amp;amp;sfgtjz_14_remark=&amp;amp;szsqqz=0&amp;amp;sfyqk=&amp;amp;szdd=1&amp;amp;area=%E5%8C%97%E4%BA%AC%E5%B8%82%20%E6%B5%B7%E6%B7%80%E5%8C%BA&amp;amp;city=%E5%8C%97%E4%BA%AC%E5%B8%82&amp;amp;province=%E5%8C%97%E4%BA%AC%E5%B8%82&amp;amp;address=%E5%8C%97%E4%BA%AC%E5%B8%82%E6%B5%B7%E6%B7%80%E5%8C%BA%E8%8A%B1%E5%9B%AD%E8%B7%AF%E8%A1%97%E9%81%93%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%E5%AD%A6%E9%99%A2%E8%B7%AF%E6%A0%A1%E5%8C%BA&amp;amp;geo_api_info=%7B%22type%22%3A%22complete%22%2C%22position%22%3A%7B%22Q%22%3A39.980937228733%2C%22R%22%3A116.35092936197998%2C%22lng%22%3A116.350929%2C%22lat%22%3A39.980937%7D%2C%22location_type%22%3A%22html5%22%2C%22message%22%3A%22Get%20geolocation%20success.Convert%20Success.Get%20address%20success.%22%2C%22accuracy%22%3A29%2C%22isConverted%22%3Atrue%2C%22status%22%3A1%2C%22addressComponent%22%3A%7B%22citycode%22%3A%22010%22%2C%22adcode%22%3A%22110108%22%2C%22businessAreas%22%3A%5B%7B%22name%22%3A%22%E4%BA%94%E9%81%93%E5%8F%A3%22%2C%22id%22%3A%22110108%22%2C%22location%22%3A%7B%22Q%22%3A39.99118%2C%22R%22%3A116.34157800000003%2C%22lng%22%3A116.341578%2C%22lat%22%3A39.99118%7D%7D%2C%7B%22name%22%3A%22%E7%89%A1%E4%B8%B9%E5%9B%AD%22%2C%22id%22%3A%22110108%22%2C%22location%22%3A%7B%22Q%22%3A39.977965%2C%22R%22%3A116.37172700000002%2C%22lng%22%3A116.371727%2C%22lat%22%3A39.977965%7D%7D%5D%2C%22neighborhoodType%22%3A%22%E7%94%9F%E6%B4%BB%E6%9C%8D%E5%8A%A1%3B%E7%94%9F%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%9C%BA%E6%89%80%3B%E7%94%9F%E6%B4%BB%E6%9C%8D%E5%8A%A1%E5%9C%BA%E6%89%80%22%2C%22neighborhood%22%3A%22%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%22%2C%22building%22%3A%22%22%2C%22buildingType%22%3A%22%22%2C%22street%22%3A%22%E5%AD%A6%E9%99%A2%E8%B7%AF%22%2C%22streetNumber%22%3A%2237%E5%8F%B7%22%2C%22country%22%3A%22%E4%B8%AD%E5%9B%BD%22%2C%22province%22%3A%22%E5%8C%97%E4%BA%AC%E5%B8%82%22%2C%22city%22%3A%22%22%2C%22district%22%3A%22%E6%B5%B7%E6%B7%80%E5%8C%BA%22%2C%22township%22%3A%22%E8%8A%B1%E5%9B%AD%E8%B7%AF%E8%A1%97%E9%81%93%22%7D%2C%22formattedAddress%22%3A%22%E5%8C%97%E4%BA%AC%E5%B8%82%E6%B5%B7%E6%B7%80%E5%8C%BA%E8%8A%B1%E5%9B%AD%E8%B7%AF%E8%A1%97%E9%81%93%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%E5%8C%97%E4%BA%AC%E8%88%AA%E7%A9%BA%E8%88%AA%E5%A4%A9%E5%A4%A7%E5%AD%A6%E5%AD%A6%E9%99%A2%E8%B7%AF%E6%A0%A1%E5%8C%BA%22%2C%22roads%22%3A%5B%5D%2C%22crosses%22%3A%5B%5D%2C%22pois%22%3A%5B%5D%2C%22info%22%3A%22SUCCESS%22%7D&amp;amp;gwdz=&amp;amp;is_move=0&amp;amp;move_reason=&amp;amp;move_remark=&amp;amp;realname=%E6%9D%A8%E6%A3%AE&amp;amp;number=ZY1806711&amp;amp;uid=305542&amp;amp;created=1614692203&amp;amp;date=20210302&amp;amp;id=28752&amp;amp;gwszdd=&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;lambda_handler&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event, context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Checking health info at &amp;#123;&amp;#125;...&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(event[&lt;span class=&#34;string&#34;&gt;&amp;#x27;time&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        report(&lt;span class=&#34;string&#34;&gt;&amp;#x27;学号&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;密码&amp;#x27;&lt;/span&gt;, content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Check failed!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Check passed!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; event[&lt;span class=&#34;string&#34;&gt;&amp;#x27;time&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (lambda_handler(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;time&amp;#x27;&lt;/span&gt;: datetime.datetime.now()&amp;#125;, &amp;#123;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果&lt;code&gt;python&lt;/code&gt;脚本报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‘ascii’ codec can’t encode characters in position 12-15: ordinal not in range(128)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;应该是编码的问题，按照&lt;a href=&#34;https://www.jianshu.com/p/4e2000920332&#34;&gt;网络上的教程&lt;/a&gt;. 在命令前增加环境变量解决：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PYTHONIOENCODING=utf-8 python report.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;cron-定时&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cron-定时&#34;&gt;&lt;/a&gt; Cron 定时&lt;/h2&gt;
&lt;p&gt;配合Unix/Linux的&lt;a href=&#34;https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html&#34;&gt;crontab&lt;/a&gt;，可以达到每天定时打卡的效果.&lt;/p&gt;
&lt;p&gt;rentaocron文件内容:&lt;/p&gt;
&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;16 18 * * * PYTHONIOENCODING=utf-8 python3 /home/rentao/workspace/report.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动定时任务:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;crontab rentaocron&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看定时任务：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;crontab -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;获得打卡地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获得打卡地址&#34;&gt;&lt;/a&gt; 获得打卡地址&lt;/h2&gt;
&lt;h3 id=&#34;mac-配置代理服务器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mac-配置代理服务器&#34;&gt;&lt;/a&gt; Mac 配置代理服务器&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;brew install mitmproxy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <updated>2021-04-01T03:16:46.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2021/03/26/SSH-proxy-by-jump-server/</id>
        <title>SSH 通过跳板机登陆服务器</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/03/26/SSH-proxy-by-jump-server/"/>
        <content type="html">&lt;h2 id=&#34;动机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动机&#34;&gt;&lt;/a&gt; 动机&lt;/h2&gt;
&lt;p&gt;接上篇&lt;a href=&#34;https://youngforest.github.io/2021/03/18/Ubuntu-vpn-cannot-access-public-resource/&#34;&gt;解决台式机Ubuntu VPN访问公网资源&lt;/a&gt;的问题后，我尝试了配置跳板机访问杭研院机器。&lt;/p&gt;
&lt;p&gt;在科研工作中，MAC笔记本无法连接OpenVPN，从而访问杭研院机器。我的台式机Ubuntu已经配置好了VPN，可以访问服务器。我现在想通过台式机Ubuntu中转，从而实现MAC“直接”访问杭研院。抽象一下问题为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A可以访问B&lt;/li&gt;
&lt;li&gt;A不可以访问C&lt;/li&gt;
&lt;li&gt;B可以访问C&lt;/li&gt;
&lt;li&gt;我现在想A访问C&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于工作中主要使用SSH，因此，问题简化成A通过SSH直接登陆C。&lt;br /&gt;
我经过不屑的网上搜索和尝试，总结了2中技术和方法实现我的目的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH 代理&lt;/li&gt;
&lt;li&gt;SSH 隧道&lt;/li&gt;
&lt;/ul&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;ssh-代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-代理&#34;&gt;&lt;/a&gt; SSH 代理&lt;/h2&gt;
&lt;p&gt;这种方法最简单，不需要在B上进行任何操作，无缝连接C。&lt;/p&gt;
&lt;p&gt;A上执行，其中&lt;code&gt;rentao@10.134.150.154&lt;/code&gt;是B，&lt;code&gt;ldmc@192.168.131.181&lt;/code&gt;是C。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -o &lt;span class=&#34;string&#34;&gt;&amp;quot;ProxyJump rentao@10.134.150.154&amp;quot;&lt;/span&gt; ldmc@192.168.131.181&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Reference: &lt;a href=&#34;https://www.xiebruce.top/650.html&#34;&gt;穿越跳板机&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ssh-隧道&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh-隧道&#34;&gt;&lt;/a&gt; SSH 隧道&lt;/h2&gt;
&lt;p&gt;B上执行:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -f -N -L 0.0.0.0:9906:192.168.131.181:22 ldmc@192.168.131.181&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A上执行:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -p 9906 ldmc@10.134.150.154&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然这种方法看起来更麻烦些，需要A B协作。但是相比第一种方法，其实更加灵活。可以通过SSH 隧道的方式通过B中转暴露更多C的服务（如观察训练数据的tensorboard HTTP服务也是我常需要暴露的），并不一定是SSH登陆。&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href=&#34;https://www.zsythink.net/archives/2450&#34;&gt;SSH 端口转发：SSH 隧道&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="tech" />
        <updated>2021-03-26T07:11:02.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2021/03/18/Ubuntu-vpn-cannot-access-public-resource/</id>
        <title>Ubuntu OpenVPN 无法获取公网资源</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/03/18/Ubuntu-vpn-cannot-access-public-resource/"/>
        <content type="html">&lt;p&gt;由于科研需求，我需要连接杭州研究院的VPN，才能使用显卡做神经网络的训练任务。&lt;br /&gt;
然而在Ubunut 18.04配置好OpenVPN后，发现一个难题：连上VPN后无法上外网（百度等网站，不是墙外的网站，而是相对局域网内网的“外网”），断开VPN后可以连外网，但无法连接杭研院的资源。鉴于工作中，外网和杭研院内网基本缺一不可，我花了2天时间调研和修复改问题。而且其他同学使用VPN并没有类似问题，所以我认为是&lt;code&gt;Ubuntu&lt;/code&gt;独特的问题。修复的操作很简单，但定位到问题的过程十分坎坷。&lt;/p&gt;
&lt;h2 id=&#34;现象整理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#现象整理&#34;&gt;&lt;/a&gt; 现象整理&lt;/h2&gt;
&lt;p&gt;连接VPN后，可以ping通baidu的IP，但浏览器无法连接baidu，&lt;a href=&#34;http://xn--pingbaidu-zz6n858p0ufslzom6ak32f.com&#34;&gt;也无法直接ping通baidu.com&lt;/a&gt;。浏览器只能打开杭研院和北航内部的网站。&lt;br /&gt;
初步判断是网络上DNS服务器的问题，但调研之后发现DNS的配置并无问题。&lt;br /&gt;
猜测是访问外部资源时，理应的DNS解析并没有办法完成。&lt;/p&gt;
&lt;p&gt;最后在网上查了半天，才发现真正的问题（VPN本地配置问题）和解决方案。&lt;/p&gt;
&lt;h2 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://askubuntu.com/a/713066/558370&#34;&gt;网上最类似的一个问题和解决方案&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由于我是Ubuntu 18.04, 并不大一样。&lt;br /&gt;
在我这里给出我的完整解决方案，以供大家参考。&lt;/p&gt;
&lt;p&gt;打开VPN的配置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn1.png&#34; alt=&#34;Step 1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn2.png&#34; alt=&#34;Step 2&#34; /&gt;&lt;/p&gt;
&lt;p&gt;勾选“Use this connection only for resources on its network&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/vpn2.png&#34; alt=&#34;Step 2&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Apply后，重新连接VPN即可解决问题。&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后记&#34;&gt;&lt;/a&gt; 后记&lt;/h2&gt;
&lt;p&gt;下一步，我还会试着在Ubuntu上装个跳板机。这样我的Mac或许可以通过该跳板机连入杭研院的机器。 (已经成功啦，下篇更新在&lt;a href=&#34;https://youngforest.github.io/2021/03/26/SSH-proxy-by-jump-server/&#34;&gt;这里&lt;/a&gt;)。&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2021-03-18T03:20:13.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2021/02/25/Google-AdSense-for-hexo-next/</id>
        <title>hexo next 配置 Google AdSense</title>
        <link rel="alternate" href="https://youngforest.github.io/2021/02/25/Google-AdSense-for-hexo-next/"/>
        <content type="html">&lt;h2 id=&#34;动机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动机&#34;&gt;&lt;/a&gt; 动机&lt;/h2&gt;
&lt;p&gt;最近由于看了“半佛仙人”的一些视频，我对钱更感兴趣了。除了拿出积蓄的一部分投资A股外，还想着怎么提高被动收入。自己一直有写博客的习惯，写了有5年多，攒了一百余篇文章。虽然每日浏览量只有几十，但苍蝇再小也是肉。参照大佬的一些经验，尝试着通过投放广告来牟利。&lt;br /&gt;
一般网站的广告收入都是通过广告联盟接入的。简而言之就是，你只用出租广告位给广告联盟，他们在此投放针对用户的广告，然后按照流量给你钱。&lt;br /&gt;
面向国际的主要就是Google AdSense了，国内也有一些，如百度。&lt;br /&gt;
因为我本职是一名程序员，博客内容也不分国界，因此选择了Google AdSense作为广告商。Google AdSense的配置十分简单。&lt;/p&gt;
&lt;h2 id=&#34;具体步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#具体步骤&#34;&gt;&lt;/a&gt; 具体步骤&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/adsense/&#34;&gt;注册新的AdSense账号&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;从Google AdSense上获取针对你网站的广告脚本，类似这样&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-ad-client&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;ca-pub-9*******6&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Option1:&lt;/p&gt;
&lt;p&gt;将广告脚本粘贴在&lt;code&gt;./themes/next/layout/_partials/head/head-unique.swig&lt;/code&gt;的末尾。&lt;/p&gt;
&lt;p&gt;然后进行验证。一般几天就会通过，发邮件通知到你。&lt;/p&gt;
&lt;p&gt;通过审核后，需要去AdSense上进行配置。基本上把 &lt;strong&gt;自动广告&lt;/strong&gt; 打开即可。&lt;/p&gt;
&lt;p&gt;Option2:&lt;/p&gt;
&lt;p&gt;在博客根目录下创建&lt;code&gt;_config.next.yml&lt;/code&gt;文件，内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;custom_file_path:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;head:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;source/_data/head.swig&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建&lt;code&gt;source/_data/head.swig&lt;/code&gt;文件，内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-ad-client&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;ca-pub-9046219176772396&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9046219176772396&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Option2的优势在于对&lt;code&gt;next&lt;/code&gt;不侵入，方便用Github Action做CD.&lt;/p&gt;
&lt;h3 id=&#34;adstxt-的设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#adstxt-的设置&#34;&gt;&lt;/a&gt; ads.txt 的设置&lt;/h3&gt;
&lt;p&gt;该文件放置在 &lt;code&gt;./source/&lt;/code&gt; 下即可，和&lt;code&gt;_posts/&lt;/code&gt; 同级。&lt;br /&gt;
&lt;code&gt;hexo d -g&lt;/code&gt;部署后，对应的文件就会自动部署到&lt;code&gt;/public/&lt;/code&gt;也就是你的博客上了。&lt;br /&gt;
其他需要生成放置在博客根目录下的文件也是类似的处理。&lt;/p&gt;
</content>
        <category term="Hexo" />
        <updated>2021-02-25T03:17:14.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2018/05/08/ssh-login-remote-server-without-password/</id>
        <title>ssh免密登陆服务器</title>
        <link rel="alternate" href="https://youngforest.github.io/2018/05/08/ssh-login-remote-server-without-password/"/>
        <content type="html">&lt;p&gt;以下命令仅针对Unix-like系统。&lt;br /&gt;
Windows是不需要这样的解决方法的，Windows下很多类Putty工具都可以选择&amp;quot;记住密码&amp;quot;来实现免密登陆。&lt;br /&gt;
我在Mac上没有找到类似记住密码的解决方案，但使用Key事实上是更安全的一种方式。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;step1-生成rsa密钥对&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step1-生成rsa密钥对&#34;&gt;&lt;/a&gt; step1: 生成rsa密钥对&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;step2-上传rsa公钥到服务器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step2-上传rsa公钥到服务器&#34;&gt;&lt;/a&gt; step2: 上传rsa公钥到服务器&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cat&lt;/span&gt; id_rsa.pub | ssh -p 26757 root@138.128.193.150 &lt;span class=&#34;string&#34;&gt;&amp;#x27;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;step3-更改权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step3-更改权限&#34;&gt;&lt;/a&gt; step3: 更改权限&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -p 26757 root@138.128.193.150 &lt;span class=&#34;string&#34;&gt;&amp;quot;chmod 700 .ssh; chmod 640 .ssh/authorized_keys&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;step4-success&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#step4-success&#34;&gt;&lt;/a&gt; step4: success!&lt;/h2&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh -p 26757 root@138.128.193.150&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;reference:&lt;br /&gt;
&lt;a href=&#34;https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/&#34;&gt;ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="tech" />
        <updated>2018-05-08T10:47:09.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2017/08/12/optimize-cortana-in-searching-local-files-and-folders/</id>
        <title>Optimize Cortana in Searching Local files and Folders</title>
        <link rel="alternate" href="https://youngforest.github.io/2017/08/12/optimize-cortana-in-searching-local-files-and-folders/"/>
        <content type="html">&lt;h2 id=&#34;problem-description&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#problem-description&#34;&gt;&lt;/a&gt; Problem description&lt;/h2&gt;
&lt;p&gt;When I used the Cortana, the personal assistant of Windows 10, I found that it is confusing that searching&lt;br /&gt;
function worked badly sometimes but well sometimes. To improve my productivity, I googled this problem and&lt;br /&gt;
encounter a good solution.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#reference&#34;&gt;&lt;/a&gt; Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.windowscentral.com/how-add-new-cortana-search-file-locations-windows-10&#34;&gt;https://www.windowscentral.com/how-add-new-cortana-search-file-locations-windows-10&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="Windows" />
        <updated>2017-08-12T15:50:49.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2017/04/08/atom-explore/</id>
        <title>atom 浅尝辄止</title>
        <link rel="alternate" href="https://youngforest.github.io/2017/04/08/atom-explore/"/>
        <content type="html">&lt;h2 id=&#34;配置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置代理&#34;&gt;&lt;/a&gt; 配置代理&lt;/h2&gt;
&lt;p&gt;笔者的需求是在markdown文档中插入LaTeX公式, atom默认的&lt;code&gt;markdown-preview&lt;/code&gt;包无法满足要求. 经过搜索, 社区包&lt;code&gt;markdown-preview-plus&lt;/code&gt;可是满足该需求.&lt;/p&gt;
&lt;h3 id=&#34;atom包管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#atom包管理&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://flight-manual.atom.io/using-atom/sections/atom-packages/#atom-packages&#34;&gt;atom包管理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;按照官方教程, 安装失败&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Installing “markdown-preview-plus@2.4.9” failed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在log中, 笔者发现了这样的请求&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET &lt;a href=&#34;https://atom.io/download/electron/v1.3.13/iojs-v1.3.13.tar.gz&#34;&gt;https://atom.io/download/electron/v1.3.13/iojs-v1.3.13.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;笔者接着使用浏览器测试该网址, 无法相应, 猜测是被q了. 幸运的是, atom文档中考虑到使用代理的需要, 并给出了guide.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://flight-manual.atom.io/getting-started/sections/installing-atom/#using-a-proxy&#34;&gt;配置apm的代理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后, &lt;a href=&#34;http://blog.youngforest.me/2016/11/02/%E5%AE%9E%E7%8E%B0terminal%E4%BB%A3%E7%90%86/&#34;&gt;fq基本功&lt;/a&gt;. 不解释.&lt;/p&gt;
&lt;h3 id=&#34;具体命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#具体命令&#34;&gt;&lt;/a&gt; 具体命令&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sean@sean-OptiPlex-790:~$ apm config &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; https-proxy http://localhost:8123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sean@sean-OptiPlex-790:~$ apm config get https-proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http://localhost:8123/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sean@sean-OptiPlex-790:~$ apm install markdown-preview-plus&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Installing markdown-preview-plus to /home/sean/.atom/packages ✓&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="atom" />
        <updated>2017-04-08T14:20:36.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2017/03/26/gvim-configuration-for-windows/</id>
        <title>gvim configuration for windows</title>
        <link rel="alternate" href="https://youngforest.github.io/2017/03/26/gvim-configuration-for-windows/"/>
        <content type="html">&lt;p&gt;最近由于准备GRE, 整天背单词, 练听力和写作, 很是心烦, 很久没折腾了, 所以抽出时间, 给自己的笔记本下载并配置gvim, 也算是休憩.&lt;/p&gt;
&lt;h1 id=&#34;下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.vim.org/download.php#pc&#34;&gt;下载&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&#34;配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件&#34;&gt;&lt;/a&gt; 配置文件&lt;/h1&gt;
&lt;p&gt;与Linux不同, Windows中gvim的配置文件为&lt;code&gt;$HOME/_vimrc&lt;/code&gt;(个人配置文件), &lt;code&gt;$VIMROOT/_vimrc&lt;/code&gt;(系统配置文件), 默认情况下为&lt;code&gt;C:\Program Files (x86)\Vim&lt;/code&gt;. 除此之外, 还可以有&lt;code&gt;_gvimrc&lt;/code&gt;文件, 只有在gui情况下打开才会读取, 在terminal下不会. 这对于两者应用不同的配置很有帮助, 尤其是使用不同的主题, 同一主题下, 两者的效果很不同. 这样就避免了使用&lt;code&gt;if(has&#39;gui_running&#39;)&lt;/code&gt;这样复杂的配置内容.&lt;/p&gt;
&lt;h1 id=&#34;vimrc配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vimrc配置&#34;&gt;&lt;/a&gt; .vimrc配置&lt;/h1&gt;
&lt;h2 id=&#34;打开配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#打开配置文件&#34;&gt;&lt;/a&gt; 打开配置文件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:e $MYVIMRC&lt;/code&gt;: 打开用户配置文件, 如果没有的话可以参考&lt;code&gt;help vimrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e $MYGVIMRC&lt;/code&gt;: 打开GUI用户配置&lt;br /&gt;
&lt;code&gt;help vimrc&lt;/code&gt;中推荐的配置文件位置是&lt;code&gt;$HOME/vimfiles/vimrc&lt;/code&gt;(Windows)或&lt;code&gt;~/.vim/vimrc(Windows)&lt;/code&gt;, 这样比起&lt;code&gt;$HOME/_vimrc&lt;/code&gt;和&lt;code&gt;~/.vim&lt;/code&gt;更portable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;个性化内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#个性化内容&#34;&gt;&lt;/a&gt; 个性化内容&lt;/h2&gt;
&lt;p&gt;$MYGVIMRC&lt;/p&gt;
&lt;figure class=&#34;highlight vim&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; clipboard=unnamed   &lt;span class=&#34;comment&#34;&gt;&amp;quot; 与Windows公用clipboard, 默认情况下, y, p只使用vim的clipboard, 不是很方便&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;colorscheme&lt;/span&gt; monokai &lt;span class=&#34;comment&#34;&gt;&amp;quot; 一个我比较喜欢的主题, 不过在terminal下很难看, 所以放在gvimrc中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; guifont=Consola&lt;span class=&#34;variable&#34;&gt;s:h18&lt;/span&gt;:cANSI:qDRAFT   &lt;span class=&#34;comment&#34;&gt;&amp;quot;换个字体, 默认字体忍不了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;$MYVIMRC&lt;/p&gt;
&lt;figure class=&#34;highlight vim&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; nobackup    &lt;span class=&#34;comment&#34;&gt;&amp;quot;不产生~文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; noswapfile  &lt;span class=&#34;comment&#34;&gt;&amp;quot;不产生.swp文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; noundofile  &lt;span class=&#34;comment&#34;&gt;&amp;quot;不产生.un文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; encoding=utf-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;quot;默认为cp936, 改为与系统兼容的utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; fileformat=dos  &lt;span class=&#34;comment&#34;&gt;&amp;quot;换行符以\r\n为准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;set&lt;/span&gt; fileencoding=utf-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;&amp;quot;与系统兼容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;syntax&lt;/span&gt; enable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;markdown支持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#markdown支持&#34;&gt;&lt;/a&gt; markdown支持&lt;/h2&gt;
&lt;p&gt;vim的插件可以说可以满足你的任何需求, 然而在这里我不是用vim插件, 而是使用chrome extension满足自己的需求. 理由是配置更简单, 未来其他编辑器也可以利用.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/volca/markdown-preview&#34;&gt;插件安装和使用说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绑定快捷键.&lt;/strong&gt; 在vimrc中加入:&lt;/p&gt;
&lt;figure class=&#34;highlight vim&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;quot; Open markdown files with Chrome.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;autocmd&lt;/span&gt; BufEnter *.md &lt;span class=&#34;keyword&#34;&gt;exe&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;noremap &amp;lt;F5&amp;gt; :!start C:\Program Files (x86)\Google\Chrome\Application\chrome.exe %:p&amp;lt;CR&amp;gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用时按&lt;code&gt;F5&lt;/code&gt;就可以了.&lt;/p&gt;
&lt;h1 id=&#34;后记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后记&#34;&gt;&lt;/a&gt; 后记&lt;/h1&gt;
&lt;p&gt;这篇post就是用&lt;code&gt;gvim for MS-WINDOWS&lt;/code&gt;完成的.&lt;/p&gt;
</content>
        <category term="vim" />
        <updated>2017-03-26T10:46:41.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2017/01/18/sublime-personlize/</id>
        <title>个性化sublime</title>
        <link rel="alternate" href="https://youngforest.github.io/2017/01/18/sublime-personlize/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;[摘要]&lt;/strong&gt; &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;sublime text3&lt;/a&gt;是一款强大的editor, 我从大二下开始正式使用, 经过半年的不断摸索, 将sublime配置成为个性化的editor, 满足了我日常编码的大部分需求.&lt;/p&gt;
&lt;h3 id=&#34;为不同的语言进行不同的配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为不同的语言进行不同的配置&#34;&gt;&lt;/a&gt; 为不同的语言进行不同的配置&lt;/h3&gt;
&lt;p&gt;首先, 打开该语言的任意个文件, &lt;code&gt;Sublime Text 3 -&amp;gt; Preferences -&amp;gt; Settings - Syntax Specific&lt;/code&gt;进入该语言设置文件, 修改设置文件并保存即可.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mlo.io/blog/2012/08/23/language-specific-indents-sublime.html&#34;&gt;参考: 为不同语言设置不同缩进&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;color-scheme&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#color-scheme&#34;&gt;&lt;/a&gt; Color Scheme&lt;/h3&gt;
&lt;p&gt;sublime text 3 默认的主题是&lt;code&gt;Monokai(dark)&lt;/code&gt;, 感觉还是挺养眼的, 但缺点是markdown的支持特别差. 我还比较喜欢的另一个主题&lt;code&gt;Solarized(dark)&lt;/code&gt;也是这样, 默认提供的&lt;code&gt;Solarized&lt;/code&gt;与在vim中的体验相去甚远. 所以我通过&lt;code&gt;Package Contorl&lt;/code&gt;安装了&lt;code&gt;Solarized Color Scheme&lt;/code&gt;这个主题, 与vim对照如下, 还是比较养眼.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../assets/sublime-solarized-optimized.PNG&#34; alt=&#34;Solarized optimized for sublime&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../assets/vim-solarized.PNG&#34; alt=&#34;Solarized for vim&#34; /&gt;&lt;/p&gt;
</content>
        <category term="sublime" />
        <updated>2017-01-18T07:27:15.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2016/11/22/move-posts-from-cnblogs-to-Hexo/</id>
        <title>将博客园中的随笔迁移到Hexo</title>
        <link rel="alternate" href="https://youngforest.github.io/2016/11/22/move-posts-from-cnblogs-to-Hexo/"/>
        <content type="html">&lt;p&gt;有关如何将其他博客上的文章迁移到&lt;code&gt;Hexo&lt;/code&gt;上, &lt;a href=&#34;https://hexo.io/docs/migration.html&#34;&gt;官方文档&lt;/a&gt;给出了一些指引. 我也是根据官方文档进行了将自己之前在博客园中的随笔迁移到新博客上的尝试. 这个过程中遇到过一些问题, 再此给出解决方法.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;未安装迁移插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#未安装迁移插件&#34;&gt;&lt;/a&gt; 未安装迁移插件&lt;/h2&gt;
&lt;p&gt;博客园需要用rss迁移, 我根据文档, &lt;code&gt;$ npm install hexo-migrator-rss --save&lt;/code&gt; 安装了相关的插件, 但在运行迁移命令&lt;code&gt;$ hexo migrate rss &amp;lt;source&amp;gt;&lt;/code&gt;时, 报出了如下错误:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;undefined migrator plugin is not installed.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Installed migrator plugins:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;For more &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;, you can check the online docs: http://hexo.io/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我在&lt;a href=&#34;http://stackoverflow.com/questions/34025076/when-running-hexo-migrate-rss-it-prompt-undefined-migrator-plugin-is-not-insta&#34;&gt;stackoverflow&lt;/a&gt;上找到了答案. 原来是需要在博客所在的目录下运行安装插件命令&lt;code&gt;$ npm install hexo-migrator-rss --save&lt;/code&gt;才可以. 看来还是我不熟悉nodejs的原因, 因为nodejs的包管理安装默认是局部的, 安装在当前文件夹下的.&lt;/p&gt;
&lt;p&gt;在博客所在目录下重新安装&amp;quot;hexo-migrator-rss&amp;quot;插件, 问题解决.&lt;/p&gt;
&lt;h2 id=&#34;迁移后的文章只有摘要和超链接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#迁移后的文章只有摘要和超链接&#34;&gt;&lt;/a&gt; 迁移后的文章只有摘要和超链接&lt;/h2&gt;
&lt;p&gt;成功迁移后, 我兴奋地立即查看了迁移结果, 结果发现, 迁移的文章只有摘要和链接到博客园原文章的超链接, 就想下图一样. 这显然不是我想要的.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/13612111/20493077/5f16663e-b052-11e6-9a0f-256d35ca6110.png&#34; alt=&#34;迁移不完全&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以发现这是由于博客园导出的rss就是这样的. 通过观察, 我发现rss的链接只是一个包含文章信息的&lt;code&gt;xml&lt;/code&gt;文件, 也就是说, 如果我们可以得到有完整文章信息的&lt;code&gt;xml&lt;/code&gt;文件就可以了. 恰好博客园的备份功能可以提供这样的文件. 将rss链接换为备份文件的链接, 在运行迁移命令就可以将完整的文章迁移到Hexo了. 下面是完整迁移的效果.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/13612111/20493198/cc799b42-b052-11e6-9a0d-28f2e3f8e207.png&#34; alt=&#34;迁移完全&#34; /&gt;&lt;/p&gt;
&lt;p&gt;不过这样的迁移还是丢失了标签这样的信息, 不尽如人意.&lt;/p&gt;
&lt;h2 id=&#34;奇怪的格式问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#奇怪的格式问题&#34;&gt;&lt;/a&gt; 奇怪的格式问题&lt;/h2&gt;
&lt;p&gt;迁移成功后发现, 有两篇文章的格式变得很奇怪, 正文都很正常, 但引用, 插入代码的地方就会排版很乱. 但另一篇却很完美. 通过观察迁移的&lt;code&gt;xml&lt;/code&gt;文件内容发现, 那两篇文章的内容是html格式的, 而另一篇是&lt;code&gt;Markdown&lt;/code&gt;格式的. 这时我才想起, 最初的两篇随笔是用博客园推荐的&lt;code&gt;TinyMCE编辑器&lt;/code&gt;编写的, 后来才转投&lt;code&gt;Markdown&lt;/code&gt;的. 所以, Hexo当然不能完美的支持.&lt;/p&gt;
</content>
        <category term="Hexo" />
        <updated>2016-11-21T17:42:23.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2016/11/02/terminal-proxy-configuration/</id>
        <title>实现terminal代理</title>
        <link rel="alternate" href="https://youngforest.github.io/2016/11/02/terminal-proxy-configuration/"/>
        <content type="html">&lt;h2 id=&#34;问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题&#34;&gt;&lt;/a&gt; 问题&lt;/h2&gt;
&lt;p&gt;作为一名Linuxer，熟练使用终端是一项必备技能，但终端中有时下载安装功能速度很慢，令人崩溃.我自然而然想到了可否加个代理,提高速度。我之前一直用shadowsocks,浏览器使用switchyProxy,实现了初步的科学上网。那么,终端中是否有类似的工具呢？答案是肯定的。通过科学搜索，我成功解决了terminal中的科学上网问题，在此总结一下，希望可以帮到大家。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h2 id=&#34;准备工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备工具&#34;&gt;&lt;/a&gt; 准备工具&lt;/h2&gt;
&lt;p&gt;shadowsocks, polipo&lt;/p&gt;
&lt;h3 id=&#34;shadowsocks&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shadowsocks&#34;&gt;&lt;/a&gt; shadowsocks&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://shadowsocks.org/en/download/clients.html&#34;&gt;Download and Install Client&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;install-command-line-client&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#install-command-line-client&#34;&gt;&lt;/a&gt; Install Command-line Client&lt;/h4&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install shadowsocks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get install shadowsocks-libev&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cpan Net::Shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;shadowsocks的配置可以参考&lt;a href=&#34;http://bblove.me/2015/03/09/use-ss/&#34;&gt;这篇文章&lt;/a&gt;, 我很久之前配置的,这里就不回忆了(忘得差不多了).&lt;/p&gt;
&lt;p&gt;让我们直接从polipo开始吧.&lt;/p&gt;
&lt;h3 id=&#34;polipo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#polipo&#34;&gt;&lt;/a&gt; polipo&lt;/h3&gt;
&lt;p&gt;polipo有多种安装方式,可以使用Python的包管理工具pip直接安装,也可以用各个操作系统的包管理工具安装.我更推荐后者,因为个人认为这样更好管理罢了.这里以Ubuntu为例.&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;apt-cache search polipo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adzapper - proxy advertisement zapper add-on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;polipo - lightweight, caching web proxy&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;polipo-dbg - debug package for polipo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第二个包就是给我们这些小白使用的,安装它&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install polipo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装好之后默认自启的,&lt;br /&gt;
我们要先修改它的配置文件(/etc/polipo/config):&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;logSyslog = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;logFile = /var/log/polipo/polipo.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;logLevel = 4 # 没有这句话的话`sudo polipo -v`会出现无法查看log文件的情况&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socksParentProxy = &amp;quot;localhost:1080&amp;quot; # 这里假设shadowsocks的local port为1080&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;socksProxyType = socks5 # 是不是和SwitchyProxy的设置很像?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;具体各个配置选项可以参考文件&lt;code&gt;/usr/share/doc/polipo/examples/config.sample&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;配置好之后,我们需要重启polipo服务(每次修改配置文件需要重启服务才能加载)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo service polipo stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo service polipo start;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者直接&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo service polipo restart;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以用&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo polipo -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看具体各个配置项,可以看到我们之前的更改生效了.&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测试&#34;&gt;&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;配置完成后,怎么才知道自己是否已经可以科学上网了呢?&lt;br /&gt;
可以使用以下命令:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~$ curl -i http://ip.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当前 IP：60.xxx.xxx.x 来自：中国北京北京 xxx/电信&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~$ http_proxy=http://localhost:8123 curl -i http://ip.cn # polipo的默认端口为8123,如有需要可以自行改动&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当前 IP：xxx.xxx.xxx.xx0 来自：美国加利福尼亚州洛杉矶&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就算成功了.&lt;/p&gt;
&lt;p&gt;最近发现&amp;quot;&lt;a href=&#34;http://ip.cn&#34;&gt;ip.cn&lt;/a&gt;&amp;quot;这个网站不能用了，500访问错误。可以将其替换为“&lt;a href=&#34;http://ipinfo.io/ip%E2%80%9D%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86i%EF%BC%8C%E8%BF%99%E6%98%AF%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%BF%94%E5%9B%9E%E4%BD%A0%E7%9A%84%E5%85%AC%E7%BD%91IP%E7%9A%84%E7%BD%91%E7%AB%99%E3%80%82&#34;&gt;ipinfo.io/ip”就可以了i，这是另一个返回你的公网IP的网站。&lt;/a&gt;&lt;br /&gt;
还有一些其他的网站提供类似的返回IP的服务:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;curl ifconfig.me&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl icanhazip.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl ipecho.net/plain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;curl ifconfig.co&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从浏览器中获得自己公网IP的方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/search?q=what%20is%20my%20IP%20address&#34;&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://duckduckgo.com/?q=ip&#34;&gt;DuckDuckGo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wolframalpha.com/input/?i=what+is+my+ip+address&#34;&gt;Wolframalpha&lt;/a&gt;, 推荐&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更进一步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#更进一步&#34;&gt;&lt;/a&gt; 更进一步&lt;/h2&gt;
&lt;p&gt;每次都打这么长的命令&lt;code&gt;http_proxy=http://localhost:8123&lt;/code&gt;着实不是我们想要的,为了方便使用,可以在终端键入&lt;code&gt;export http_proxy=http://localhost:8123&lt;/code&gt;,表示对该终端所有命令生效;或者更进一步,在.bashrc中加入&lt;code&gt;export http_proxy=http://localhost:8123&lt;/code&gt;,每次启动终端时自动执行.如果不想要每次都走代理,可以像我一样,在.bashrc中加入&lt;code&gt;alias hp=&amp;quot;http_proxy=http://localhost:8123&amp;quot;&lt;/code&gt;,每次需要代理时,只需要在命令前面加&lt;code&gt;hp &lt;/code&gt;就好了.&lt;/p&gt;
&lt;h2 id=&#34;为git配置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为git配置代理&#34;&gt;&lt;/a&gt; 为git配置代理&lt;/h2&gt;
&lt;p&gt;git clone的速度很是感人, 只有几十k, 为git配置代理也是很简单的.&lt;/p&gt;
&lt;p&gt;Add the following setting to the http items of .gitconfig files.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[http]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;proxy = &amp;lt;address of the proxy server&amp;gt;:&amp;lt;port of the proxy server&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;You can also configure it using the following config command:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global http.proxy &amp;lt;address of the proxy server&amp;gt;:&amp;lt;port of the proxy server&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1&#34;&gt;ssh形式连接Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在终端中尽情享受科学上网吧!&lt;/p&gt;
</content>
        <category term="Linux" />
        <updated>2016-11-02T15:30:00.000Z</updated>
    </entry>
    <entry>
        <id>https://youngforest.github.io/2016/11/02/Hexo-github-building-personal-blog/</id>
        <title>Hexo + github 搭建个人博客</title>
        <link rel="alternate" href="https://youngforest.github.io/2016/11/02/Hexo-github-building-personal-blog/"/>
        <content type="html">&lt;h2 id=&#34;动机放在前面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#动机放在前面&#34;&gt;&lt;/a&gt; 动机(放在前面)&lt;/h2&gt;
&lt;p&gt;之前在cnblog上有个博客, 但是也不经常维护, 到现在满打满算也才有3篇随笔, 1个粉. 主要是因为自己没有写东西的习惯. 高中的时候记过一段时间的日记, 零零总总写了有大半本, 都是一些励志(自欺欺人)的东西, 写给自己看的.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;首先, 之前感觉没有可写的, 但现在觉得可写的还是挺多的.自己这两年也折腾了不少东西.但折腾完后, 说实话忘得挺快的, 下次自己再弄或者给别人处理相同问题的时候, 基本上又要重新来过. 记下来下之后, 不管是自己日后需要, 还是给小伙伴们借鉴都是极有用的.&lt;/p&gt;
&lt;p&gt;其次, 经高人安利, 经常写博客, 总结自己的工作学习, 和网络上的大牛们交流是学习计算机的基本技能. 写下来, 不仅可以系统地记录自己的学习历程, 供后日回顾, 或后人参考, 还可以督促自己坚持下来. 何乐而不为呢?&lt;/p&gt;
&lt;p&gt;最后, 最近在搞编译课设的时候, 看到了&lt;a href=&#34;http://jcf94.com/2016/02/21/2016-02-21-pl0/&#34;&gt;这篇博客&lt;/a&gt;. 学习编译知识的同时, 感觉这个博客设计的很美观, 博主也很nice. 了解到使用&lt;code&gt;Hexo&lt;/code&gt;搭建的时候, 便有了自己搭建博客的想法, 现在也终于有时间实现了.&lt;/p&gt;
&lt;h2 id=&#34;介绍hexo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#介绍hexo&#34;&gt;&lt;/a&gt; 介绍&lt;code&gt;Hexo&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;有很多专门用来搭建博客的框架, 如 WordPress, Jekyll, Octopress, Joomla等. 这些我都没有用过, 就不评论了. 事实上, 这是我第一次搭建博客的经历, 也算是一种猿粪吧, 遇上了Hexo.&lt;/p&gt;
&lt;p&gt;这里我就自己的感受, 说说Hexo的优点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文档完善.&lt;/li&gt;
&lt;li&gt;中文支持好, 包括文档各个方面. 事实上, 开发者就是中国人.&lt;/li&gt;
&lt;li&gt;主题丰富.(作为一个看脸的人)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;搭建过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#搭建过程&#34;&gt;&lt;/a&gt; 搭建过程&lt;/h2&gt;
&lt;h3 id=&#34;本地hexo安装配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地hexo安装配置&#34;&gt;&lt;/a&gt; 本地Hexo安装配置&lt;/h3&gt;
&lt;p&gt;关于如何搭建, 我这里推荐官方的&lt;a href=&#34;https://hexo.io/zh-cn/docs/&#34;&gt;文档&lt;/a&gt;. 文档中说的已经很详细了, 而且遇到问题的话, 还可以直接在文档最下面的讨论区提问, 貌似遇到奇奇怪怪问题的人挺多的, 我遇到问题一般靠谷歌, 事实上, 很多时候都被谷歌引到讨论区或者文档中的&lt;a href=&#34;https://hexo.io/zh-cn/docs/troubleshooting.html&#34;&gt;Troubleshoot&lt;/a&gt;了.&lt;/p&gt;
&lt;p&gt;我安装hexo使用的环境的Ubuntu14.04, 在安装hexo的时候&lt;code&gt;$ npm install -g hexo-cli&lt;/code&gt;, 会遇到这样的问题&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sh: 1: node: not found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm WARN This failure might be due to the use of legacy binary &amp;quot;node&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm WARN For further explanations, please read&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/usr/share/doc/nodejs/README.Debian&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过搜索可以很快找到解决问题的&lt;a href=&#34;http://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu&#34;&gt;方法&lt;/a&gt;. 只需要&lt;code&gt;sudo apt-get install nodejs-legacy&lt;/code&gt;就可以了.&lt;/p&gt;
&lt;p&gt;出现这个问题的原因是, debian社区发现, nodejs解释器的命令是&lt;code&gt;node&lt;/code&gt;. 然而, 这个命令和其他的包有命名空间的冲突, 比如 node 包中的 ax25-node. 所以, 他们决定把nodejs解释器命令改为&lt;code&gt;nodejs&lt;/code&gt;, 大家需要用到nodejs的解释器时需要&lt;code&gt;nodejs&lt;/code&gt;命令, 而不是&lt;code&gt;node&lt;/code&gt;. 但是这样就会带来向后兼容的问题, 之前的nodejs脚本中的命令还用的是&lt;code&gt;node&lt;/code&gt;, 其他Linux发行版也一直在用&lt;code&gt;node&lt;/code&gt;. 所以他们想了一个兼容的方法, 创建一个符号链接, 将/usr/bin/node链接到/usr/bin/nodejs. 这个工作又&lt;code&gt;node-legacy&lt;/code&gt;包来实现, 不推荐用户自己手动链接. 并且他们也规定, &#39;nodejs’的源代码包应该也提供一个&lt;code&gt;node-legacy&lt;/code&gt;的可执行包. 这样就&amp;quot;完美&amp;quot;地解决了兼容问题.&lt;/p&gt;
&lt;p&gt;由此看来, debian系的发布版都会出现这个问题.&lt;/p&gt;
&lt;h3 id=&#34;发布到github上&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#发布到github上&#34;&gt;&lt;/a&gt; 发布到github上&lt;/h3&gt;
&lt;p&gt;在github上新建一个库, 库名为 “{your name}.github.io”, 比如, 我的是&amp;quot;&lt;a href=&#34;http://youngforest.github.io&#34;&gt;youngforest.github.io&lt;/a&gt;&amp;quot;. 事实上, 以这样的格式命名, github会默认配置好你的&lt;code&gt;[GitHub Pages](https://pages.github.com/)&lt;/code&gt;, 默认发布到&amp;quot;https://{your name}.github.io/“, 比如我的就是&amp;quot;&lt;a href=&#34;https://youngforest.github.io/&#34;&gt;https://youngforest.github.io/&lt;/a&gt;”.&lt;br /&gt;
当然, 如果你不这样命名的话, 自己也可去库中的设置中设置发布&lt;code&gt;GitHub Page&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;在本地的博客目录下, 运行&lt;code&gt;hexo generate&lt;/code&gt;, 即可在&lt;code&gt;public/&lt;/code&gt;中生成你博客的静态页面, 在这个文件夹下, 将其中所有的文件推到你在github上建好的库就可以了.&lt;/p&gt;
&lt;p&gt;关于具体如何将本地的文件夹推到新建好的库, 在你新建好空库的时候, github应该会告诉你.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/13612111/20461580/713552e6-af3d-11e6-8078-a8c570e594af.png&#34; alt=&#34;initial a repository in github&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果你想要一条命令完成github部署的话, 可以参考&lt;a href=&#34;https://hexo.io/zh-cn/docs/deployment.html&#34;&gt;相关文档&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;我在运行&lt;code&gt;hexo deploy&lt;/code&gt;是会遇到这样的错误&lt;code&gt;ERROR Deployer not found: git&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;查了半天在&lt;a href=&#34;https://github.com/hexojs/hexo/issues/1040&#34;&gt;hexo的isuue&lt;/a&gt;中找到了解决方法. 在bash中运行如下命令就好了.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-index --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-archive --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-category --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-tag --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-server --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-renderer-marked@0.2 --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-renderer-stylus@0.2 --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-feed@1 --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-generator-sitemap@1 --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当你在浏览器中访问你的&amp;quot;GitHub Pages&amp;quot;时, 就会看到部署好的博客.&lt;br /&gt;
在&lt;a href=&#34;https://youngforest.github.io/&#34;&gt;这里&lt;/a&gt;可以看到我部署好的博客.&lt;/p&gt;
</content>
        <category term="Hexo" />
        <updated>2016-11-02T14:32:55.000Z</updated>
    </entry>
</feed>
