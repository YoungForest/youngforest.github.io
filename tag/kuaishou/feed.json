{
    "version": "https://jsonfeed.org/version/1",
    "title": "YoungForest's blog • All posts by \"kuaishou\" tag",
    "description": "佛系更新；生活、学习",
    "home_page_url": "https://youngforest.github.io",
    "items": [
        {
            "id": "https://youngforest.github.io/2018/05/07/Advanced-SQL-practice/",
            "url": "https://youngforest.github.io/2018/05/07/Advanced-SQL-practice/",
            "title": "SQL实践进阶",
            "date_published": "2018-05-07T15:30:25.000Z",
            "content_html": "<p>这一周在公司写了很多很长功能很复杂的sql语句，深感自己的数据库和SQL学的还只是皮毛，完全没法满足工程上的要求。<br />\n负责带我的二mentor对SQL比较也精通，对我有很多指导和建议。<br />\n没有对比就没有伤害，自己的菜和师兄的强让我知耻而后勇，有了进阶SQL的想法和行动。</p>\n<span id=\"more\"></span>\n<p>我被推荐的2份教程（感谢快手师兄和二mentor）：</p>\n<ul>\n<li>sql必知必会</li>\n<li><a href=\"http://www.runoob.com/sql/sql-constraints.html\">runoob</a></li>\n</ul>\n<p>其中《sql必知必会》我系统的看过一遍，runoob教程只是大致浏览一遍。<br />\n我认为只看一个教程就够了。<br />\nrunoob的优点是可以在网站提供的线上数据库进行测试和练习，这一点和<a href=\"https://www.w3schools.com/sql/\">w3school的教程</a>有些像。<br />\n《sql必知必会》的优点是内容比较多，作者会传授一些写sql的经验，还会涉及到不同数据库的移植性和区别。</p>\n<p><a href=\"https://leetcode.com/problemset/database/\">leetcode上有42道Database的面试题目</a>，有时间一定要刷一刷。</p>\n<h1 id=\"实践中遇到的问题\"><a class=\"markdownIt-Anchor\" href=\"#实践中遇到的问题\"></a> 实践中遇到的问题</h1>\n<p>由于我的岗位是推荐组的算法工程师，有大量的数据挖掘的需要。<br />\n而且写的不是纯sql，而是<a href=\"https://cwiki.apache.org/confluence/display/Hive/Home\">Hive</a>-sql。<br />\nHive上存在很多限制和挑战，比如不能在select中嵌套select子句，<code>select 2 * (select 3);</code>就是不可以的（最后摸索出得解决方案是：使用聚集函数或列之间的可计算进行需要的计算，这就很考验<code>union</code>或<code>join</code>的灵活使用了。）；数据量特别大，每次查询很耗时（学会了用小的查询验证想法，从内到外层层验证，还有在‘jupyter notebook’上进行查询和计算）。</p>\n<h1 id=\"回答面试中的问题\"><a class=\"markdownIt-Anchor\" href=\"#回答面试中的问题\"></a> 回答面试中的问题</h1>\n<p>一面的小哥哥当时问我：你会SQL吗？</p>\n<p>我：会，而且我之前还有在数据库公司的实习经历。</p>\n<p>小哥哥：那你说说‘left join’，‘right join’，'inner join’的区别。</p>\n<p>我：不知道…</p>\n<p>小哥哥：那你知道partition吗？</p>\n<p>我：这个我也不知道。</p>\n<p>小哥哥：你会的SQL仅限于上过的“数据库原理”和“课程设计”课吗？</p>\n<p>我：是的，而且因为一段时间不用有些生疏了。</p>\n<p>小哥哥就没再问SQL相关的内容了。</p>\n<p>经过一周的工作和SQL的重新系统学习，我现在可以回答这两个问题了。</p>\n<h3 id=\"left-joinright-joininner-join的区别\"><a class=\"markdownIt-Anchor\" href=\"#left-joinright-joininner-join的区别\"></a> ‘left join’，‘right join’，'inner join’的区别</h3>\n<p>'inner join’即内联结，对于不匹配的项，不存在于联结结果中；‘left join’，左外联结，如果左边的项在右边的表中没有匹配项，仍存在一条记录于联结结果中，此时右边表列均为NULL；‘right join’，右联结与之类似。事实上，'left join’和’right join’可以互换，只是联结的左右两表也需要互换位置。</p>\n<h3 id=\"partition的概念\"><a class=\"markdownIt-Anchor\" href=\"#partition的概念\"></a> partition的概念</h3>\n<p>partion是为了加快查询速度，而将一个表分成不同的区。<br />\n限制是，select时，被partition的列必须写在where里作为filter。</p>\n",
            "tags": [
                "tech",
                "kuaishou"
            ]
        },
        {
            "id": "https://youngforest.github.io/2018/04/30/kuaishou-intern-interview/",
            "url": "https://youngforest.github.io/2018/04/30/kuaishou-intern-interview/",
            "title": "快手实习生面试",
            "date_published": "2018-04-30T15:33:10.000Z",
            "content_html": "<p>感谢@lxc师兄的内推和面试建议，我有幸可以参加快手推荐组算法实习生的面试，并最终通过面试被录取。<br />\n虽然实习生的面试可能相对简单，但是我认为还是有参考价值的。<br />\n刷实习算是一种最终找到好工作，进入梦想公司的途径吧（不能算是捷径，我实习的2份工作还是很累的。快手是我的第二份实习。）。<br />\n现在实习终于稳定下来，毕设论文也还有一段时间才deadline，恰好抽出时间总结一下自己的面试和实习。<br />\n希望可以指导到自己之后找其他实习或者是正式工作:)</p>\n<span id=\"more\"></span>\n<h1 id=\"面试\"><a class=\"markdownIt-Anchor\" href=\"#面试\"></a> 面试</h1>\n<p>我总共经历2轮面试，耗时近2个小时。<br />\n总体感觉是准备的不很充分，很多地方有待提高。</p>\n<h2 id=\"一面\"><a class=\"markdownIt-Anchor\" href=\"#一面\"></a> 一面</h2>\n<p>面试官是一个胖胖的小哥哥，很友善，面试也很认真。<br />\n我参加实习后，经常在开会和吃饭的时候遇到他，感觉很亲切；我们不在一个小组，但在同一大组。</p>\n<p>面试内容：</p>\n<ul>\n<li>给定一个数组，找到和最大的连续序列，返回和；</li>\n<li>翻转句子：如 today is wednesday! =&gt; wesdnesday is today!</li>\n<li>SQL相关：left join, right join, inner join区别；partition了解不。</li>\n<li>机器学习相关：准确率和召回率的定义</li>\n</ul>\n<h2 id=\"二面\"><a class=\"markdownIt-Anchor\" href=\"#二面\"></a> 二面</h2>\n<p>面试官是一个严肃的工程师，给我的印象是反应很快，可能是leader类的人物。<br />\n但可惜的是，我入职之后在大组没有见过他。</p>\n<ul>\n<li>内存特别小时，在大量的数中找到数m的位置。</li>\n<li>a = b时，b有可能在哪里获取？寄存器、cache、Memory、外存</li>\n<li>一个已排好序的数组，循环左移k位(k未知)，找到数m的位置。</li>\n<li>n个台阶，可以走1步或2步… 这个题他先问我做过吗？我说做过，就没再让我做。</li>\n<li>一颗二叉树，每个节点存一个数，找到两个数的最近公共父节点。</li>\n<li>多进程与多线程区别；</li>\n<li>java、C++ 多进程通信使用；</li>\n<li>java、C++ 网络通信 socket库使用。（这2个我没答好）</li>\n<li>机器学习的了解程度，损失函数是否研究过。</li>\n</ul>\n<h2 id=\"面试准备\"><a class=\"markdownIt-Anchor\" href=\"#面试准备\"></a> 面试准备</h2>\n<p>经过这次面试，我对面试的准备内容更加明确了：</p>\n<ul>\n<li>数据结构和算法是基础，必须好好复习和刷题的。</li>\n<li>SQL、机器学习和Hadoop只是是锦上添花的技能。</li>\n<li>手写代码和简答是面试的主要内容。</li>\n</ul>\n<p>因为事实上，我sql、机器学习、多线程的问题答得都很差，只有算法题马马虎虎答得还可以，都写出来了，虽然中间出现过一些错误而且耗时可能比较长（尤其是手写第一题的时候，还没进入状态，多花了些时间）。</p>\n<p>参考师兄的建议，我认为如下的准备路径和方式比较高效（我也还在准备当中）：</p>\n<ul>\n<li>数据结构和算法：cos226+算法第四版，the elements of interview</li>\n<li>sql: sql必知必会，<a href=\"http://www.runoob.com/sql/sql-constraints.html\">runoob</a></li>\n<li>多线程：Java并发编程实践</li>\n<li>机器学习：周志华的“西瓜书&quot;</li>\n</ul>\n<h1 id=\"入职\"><a class=\"markdownIt-Anchor\" href=\"#入职\"></a> 入职</h1>\n<p>之前因为毕设的原因，还犹豫过到底要不要接受实习offer。<!--和陪奶奶--><br />\n经过咨询师兄和权衡利弊，我最终还是接受了offer，于4月19日入职。<!--被奶奶劝导--><br />\n这份offer的待遇是：每天300，管午饭、下午茶和晚饭，水果牛奶雪糕随便吃。<br />\n事实上是：<br />\n每天税前300，实习生按劳务所得交税，超过800的部分要交给国家20%。<br />\n午饭晚饭还是很棒的，尤其是午饭的自助餐，每次都吃撑。<br />\n下午茶很简单，一个牛皮纸袋里有饮料、水果和零食，与想象中的有差距，但还是很使人满足的；我经常会剩一些带回去吃。</p>\n<p>从工作中的点点滴滴中，我可以感受到<br />\n快手是一家技术很好、牛人很多的公司，现在在迅速扩张之中，几乎每周组内都有人入职（因此我才被录取？）。<br />\n带我的2个mentor人也都很nice，我从工作中学习和成长了很多。</p>\n<!--\n工作内容有：\n- 使用pyplot进行数据可视化\n- hive sql进行数据预处理\n-->",
            "tags": [
                "intern",
                "kuaishou"
            ]
        }
    ]
}