{
    "version": "https://jsonfeed.org/version/1",
    "title": "YoungForest's blog • All posts by \"mihayo\" tag",
    "description": "佛系更新；生活、学习",
    "home_page_url": "https://youngforest.github.io",
    "items": [
        {
            "id": "https://youngforest.github.io/2020/03/20/Mihayo-backend-intern-interview/",
            "url": "https://youngforest.github.io/2020/03/20/Mihayo-backend-intern-interview/",
            "title": "米哈游 服务器开发 暑期实习",
            "date_published": "2020-03-20T16:29:48.000Z",
            "content_html": "<h1 id=\"一面\"><a class=\"markdownIt-Anchor\" href=\"#一面\"></a> 一面</h1>\n<p>time: 2020-03-20 16:29:48</p>\n<p>上周五参加了在牛客网上的笔试。题目不难，分为计算机基础、算法 和 系统设计。<br />\n计算机基础靠着本科的认真学习，没啥问题。算法也属于LeetCode medium难度，很快AC了。<br />\n系统设计倒是难倒我了，并不擅长，也没有准备。需要设计一个 MOBA游戏的匹配机制，包括单人和组队。之前完全没想过，瞎写了一通。<br />\n昨天收到电话，说我通过了笔试，约了今天下午2:30的电话面试。</p>\n<p>本科有个可爱的大佬舍友最后去米哈游了。我虽然对游戏不感冒，但本着多面试，多总结的态度，也报名了其春招内推。</p>\n<p>面试预计30min, 实际40min。</p>\n<p>自我介绍 + 项目经历 + 计算机基础。</p>\n<p>计算机基础又分为：</p>\n<ul>\n<li>C++</li>\n<li>操作系统</li>\n<li>数据库</li>\n<li>计算机网络</li>\n<li>设计模式</li>\n</ul>\n<p>我不会的有：</p>\n<ul>\n<li>TCP 3次挥手，最后的time_wait的作用</li>\n<li>C++ 父类析构函数为什么必需是虚函数</li>\n<li>MySQL\n<ul>\n<li>事务 及 ACID</li>\n<li>Block 和 Tag 区别</li>\n<li>BiLog是什么</li>\n<li>timestamp, datetime的区别</li>\n</ul>\n</li>\n<li>说出常用的设计模式，我讲了几个，但面试官好像并不满意</li>\n</ul>\n<p>没有手撕代码环节，稍微有些失落。</p>\n<h1 id=\"二面\"><a class=\"markdownIt-Anchor\" href=\"#二面\"></a> 二面</h1>\n<p>time: 2020-04-03 12:54:20</p>\n<p>之前<a href=\"https://www.nowcoder.com/discuss/387235\">一面的帖子</a>。</p>\n<p>二面距离一面过去了整整2周。中间HR还打电话希望我能到上海onsite二面。我只好如实说 学校现在不允许跨省区流动。贵司心也是大。最后还是按计划视频面试。</p>\n<p>整场面试持续50min。难度并不大，但由于是游戏公司，所以很多问题和项目是之前没有遇到或想过。</p>\n<h2 id=\"算法\"><a class=\"markdownIt-Anchor\" href=\"#算法\"></a> 算法</h2>\n<p>合并2个有序链表。</p>\n<h2 id=\"项目\"><a class=\"markdownIt-Anchor\" href=\"#项目\"></a> 项目</h2>\n<ul>\n<li>Linux下的项目。我告诉他我大多数全是Linux。</li>\n<li>之前大四做的一个游戏（软件工程作业）<a href=\"https://github.com/xxr5566833/Game\">github</a>。</li>\n<li>内存泄漏诊断</li>\n<li>protobuf</li>\n</ul>\n<h2 id=\"计算机基础\"><a class=\"markdownIt-Anchor\" href=\"#计算机基础\"></a> 计算机基础</h2>\n<ul>\n<li>如何诊断网络问题？</li>\n<li>一致性哈希，增桶、减桶。</li>\n<li>单例模式，带模版的单例，多线程下的。这是共享屏幕在本地IDE实现的。</li>\n</ul>\n<h1 id=\"三面\"><a class=\"markdownIt-Anchor\" href=\"#三面\"></a> 三面</h1>\n<p>time: 2020-04-08 12:58:36</p>\n<p><a href=\"https://www.nowcoder.com/discuss/387235\">一面</a><br />\n<a href=\"https://www.nowcoder.com/discuss/399642\">二面</a></p>\n<h2 id=\"语言基础\"><a class=\"markdownIt-Anchor\" href=\"#语言基础\"></a> 语言基础</h2>\n<p>实现智能指针shared_ptr的构造、析构函数。<br />\n问：为什么count要用指针？</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typename</span>&lt;T&gt;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">shared_ptr</span> &#123;</span><br><span class=\"line\">    T* data = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    <span class=\"type\">uint32_t</span>* count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">shared_ptr</span>(<span class=\"type\">const</span> shared_ptr&amp; a) &#123;</span><br><span class=\"line\">        data = a-&gt;data;</span><br><span class=\"line\">        count = a-&gt;count;</span><br><span class=\"line\">        ++(*count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">shared_ptr</span>(T* t) &#123;</span><br><span class=\"line\">        data = t;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (t) &#123;</span><br><span class=\"line\">            count = <span class=\"keyword\">new</span> <span class=\"built_in\">uint32_t</span>();</span><br><span class=\"line\">            count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    shared_ptr <span class=\"keyword\">operator</span> = (<span class=\"type\">const</span> shared_ptr&amp; a) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a == <span class=\"keyword\">this</span>) ;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> != <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">                --(*count);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (*count == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">delete</span> data;</span><br><span class=\"line\">                    <span class=\"keyword\">delete</span> count;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            data = a-&gt;data;</span><br><span class=\"line\">            count = a-&gt;count;</span><br><span class=\"line\">            ++(*count);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ~<span class=\"built_in\">shared_ptr</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (*count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                --(*count);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">delete</span> data;</span><br><span class=\"line\">                <span class=\"keyword\">delete</span> count;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">typename</span>&lt;T&gt;</span></span><br><span class=\"line\"><span class=\"function\">shared_ptr&lt;T&gt; <span class=\"title\">make_shared</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">ret</span>(<span class=\"keyword\">new</span> <span class=\"built_in\">T</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"算法-2\"><a class=\"markdownIt-Anchor\" href=\"#算法-2\"></a> 算法</h2>\n<blockquote>\n<p>1，7，10 三种面值硬币。<br />\n给定一个n，最少硬币凑出这个值。</p>\n</blockquote>\n<p>我刚开始想要贪心，但面试官很快给出反例。</p>\n<blockquote>\n<p>15</p>\n</blockquote>\n<p>之后给出一个DP的O(N)的解法，面试官再提示N很大时，有何优化的思路。进而提出先mod最大公倍数，再对余数DP的O(1)解法。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">dp</span>(n) = <span class=\"built_in\">min</span>(</span><br><span class=\"line\">    <span class=\"built_in\">dp</span>(n - <span class=\"number\">1</span>) + <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"built_in\">dp</span>(n - <span class=\"number\">7</span>) + <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"built_in\">dp</span>(n - <span class=\"number\">10</span>) + <span class=\"number\">1</span>,</span><br><span class=\"line\">); <span class=\"keyword\">if</span> n &gt;= <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"number\">1</span> * <span class=\"number\">7</span> * <span class=\"number\">10</span> = <span class=\"number\">70</span></span><br><span class=\"line\"><span class=\"built_in\">O</span> (<span class=\"number\">7</span> + <span class=\"number\">1</span>) = <span class=\"built_in\">O</span>(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据结构设计\"><a class=\"markdownIt-Anchor\" href=\"#数据结构设计\"></a> 数据结构设计</h2>\n<p>设计一个百万量级排行榜 ，支持插入，按uid查找分数，按uid查找名次，按名次查找uid.<br />\nfollow up: 分数相同时，按照上榜时间排序。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">order statisc tree</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getSize</span><span class=\"params\">(TreeNode* node)</span> </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">set</span><br><span class=\"line\">multiset</span><br><span class=\"line\"></span><br><span class=\"line\">order_statisc_tree&lt;pair&lt;分数, 时间&gt;，uid&gt;：按名次查uid log N</span><br><span class=\"line\">hashmap&lt;uid, pair&lt;分数,时间&gt;&gt;: 按uid查分数 <span class=\"built_in\">O</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">按uid查排名 <span class=\"built_in\">O</span>(log N)</span><br><span class=\"line\">insert: <span class=\"built_in\">O</span>(<span class=\"number\">1</span> + log N)</span><br></pre></td></tr></table></figure>\n<h2 id=\"计算机基础-2\"><a class=\"markdownIt-Anchor\" href=\"#计算机基础-2\"></a> 计算机基础</h2>\n<p>Linux熟不<br />\n排查线上某进程CPU为100%。</p>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h2>\n<p>游戏公司的特别之处。<br />\n玩过我们公司的游戏吗？（否）那平时玩什么游戏。</p>\n<p>最后面试官问我能不能毕业前提前来实习。我说不能，没发去上海。</p>\n<p>问题：贵司服务器开发内部分组情况。不同产品的后端共用情况。</p>\n",
            "tags": [
                "intern",
                "Mihayo"
            ]
        }
    ]
}