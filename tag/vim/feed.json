{
    "version": "https://jsonfeed.org/version/1",
    "title": "YoungForest's blog • All posts by \"vim\" tag",
    "description": "佛系更新；生活、学习",
    "home_page_url": "https://youngforest.github.io",
    "items": [
        {
            "id": "https://youngforest.github.io/2017/03/26/gvim-configuration-for-windows/",
            "url": "https://youngforest.github.io/2017/03/26/gvim-configuration-for-windows/",
            "title": "gvim configuration for windows",
            "date_published": "2017-03-26T10:46:41.000Z",
            "content_html": "<p>最近由于准备GRE, 整天背单词, 练听力和写作, 很是心烦, 很久没折腾了, 所以抽出时间, 给自己的笔记本下载并配置gvim, 也算是休憩.</p>\n<h1 id=\"下载\"><a class=\"markdownIt-Anchor\" href=\"#下载\"></a> <a href=\"http://www.vim.org/download.php#pc\">下载</a></h1>\n<h1 id=\"配置文件\"><a class=\"markdownIt-Anchor\" href=\"#配置文件\"></a> 配置文件</h1>\n<p>与Linux不同, Windows中gvim的配置文件为<code>$HOME/_vimrc</code>(个人配置文件), <code>$VIMROOT/_vimrc</code>(系统配置文件), 默认情况下为<code>C:\\Program Files (x86)\\Vim</code>. 除此之外, 还可以有<code>_gvimrc</code>文件, 只有在gui情况下打开才会读取, 在terminal下不会. 这对于两者应用不同的配置很有帮助, 尤其是使用不同的主题, 同一主题下, 两者的效果很不同. 这样就避免了使用<code>if(has'gui_running')</code>这样复杂的配置内容.</p>\n<h1 id=\"vimrc配置\"><a class=\"markdownIt-Anchor\" href=\"#vimrc配置\"></a> .vimrc配置</h1>\n<h2 id=\"打开配置文件\"><a class=\"markdownIt-Anchor\" href=\"#打开配置文件\"></a> 打开配置文件</h2>\n<ul>\n<li><code>:e $MYVIMRC</code>: 打开用户配置文件, 如果没有的话可以参考<code>help vimrc</code></li>\n<li><code>:e $MYGVIMRC</code>: 打开GUI用户配置<br />\n<code>help vimrc</code>中推荐的配置文件位置是<code>$HOME/vimfiles/vimrc</code>(Windows)或<code>~/.vim/vimrc(Windows)</code>, 这样比起<code>$HOME/_vimrc</code>和<code>~/.vim</code>更portable.</li>\n</ul>\n<h2 id=\"个性化内容\"><a class=\"markdownIt-Anchor\" href=\"#个性化内容\"></a> 个性化内容</h2>\n<p>$MYGVIMRC</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> clipboard=unnamed   <span class=\"comment\">&quot; 与Windows公用clipboard, 默认情况下, y, p只使用vim的clipboard, 不是很方便</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">colorscheme</span> monokai <span class=\"comment\">&quot; 一个我比较喜欢的主题, 不过在terminal下很难看, 所以放在gvimrc中</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> guifont=Consola<span class=\"variable\">s:h18</span>:cANSI:qDRAFT   <span class=\"comment\">&quot;换个字体, 默认字体忍不了</span></span><br></pre></td></tr></table></figure>\n<p>$MYVIMRC</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"keyword\">number</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> nobackup    <span class=\"comment\">&quot;不产生~文件</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> noswapfile  <span class=\"comment\">&quot;不产生.swp文件</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> noundofile  <span class=\"comment\">&quot;不产生.un文件</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> encoding=utf-<span class=\"number\">8</span>  <span class=\"comment\">&quot;默认为cp936, 改为与系统兼容的utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> fileformat=dos  <span class=\"comment\">&quot;换行符以\\r\\n为准</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> fileencoding=utf-<span class=\"number\">8</span>  <span class=\"comment\">&quot;与系统兼容</span></span><br><span class=\"line\"><span class=\"keyword\">syntax</span> enable</span><br></pre></td></tr></table></figure>\n<h2 id=\"markdown支持\"><a class=\"markdownIt-Anchor\" href=\"#markdown支持\"></a> markdown支持</h2>\n<p>vim的插件可以说可以满足你的任何需求, 然而在这里我不是用vim插件, 而是使用chrome extension满足自己的需求. 理由是配置更简单, 未来其他编辑器也可以利用.</p>\n<p><a href=\"https://github.com/volca/markdown-preview\">插件安装和使用说明</a></p>\n<p><strong>绑定快捷键.</strong> 在vimrc中加入:</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&quot; Open markdown files with Chrome.</span></span><br><span class=\"line\"><span class=\"keyword\">autocmd</span> BufEnter *.md <span class=\"keyword\">exe</span> <span class=\"string\">&#x27;noremap &lt;F5&gt; :!start C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe %:p&lt;CR&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>使用时按<code>F5</code>就可以了.</p>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>这篇post就是用<code>gvim for MS-WINDOWS</code>完成的.</p>\n",
            "tags": [
                "vim"
            ]
        }
    ]
}