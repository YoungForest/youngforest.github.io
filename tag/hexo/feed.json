{
    "version": "https://jsonfeed.org/version/1",
    "title": "YoungForest's blog • All posts by \"hexo\" tag",
    "description": "佛系更新；生活、学习",
    "home_page_url": "https://youngforest.github.io",
    "items": [
        {
            "id": "https://youngforest.github.io/2021/09/07/Setup-English-blog/",
            "url": "https://youngforest.github.io/2021/09/07/Setup-English-blog/",
            "title": "Hexo 创建中英文博客",
            "date_published": "2021-09-07T16:50:49.000Z",
            "content_html": "<p>自从来到亚马逊工作，接触英文和外国同事比较多。锻炼使用英语的需求越来越大。而且为了和国际接轨，我决定创建自己的英文博客。</p>\n<h2 id=\"步骤\"><a class=\"markdownIt-Anchor\" href=\"#步骤\"></a> 步骤</h2>\n<p>以中文博客为模版，创建英文博客。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r Hexo HexoEn</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>删除HexoEn中没用的中文博文和资源。</p>\n<p>在Github创建一个新repo：“en”.</p>\n<p>修改HexoEn <code>_config.yml</code>配置文件。注意部署分支为<code>gh-pages</code>, 这个GitHub默认的pages分支，如果不同的话，需要去repo的<code>Setting-&gt;Pages</code>配置一下你自定义的分支:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> </span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:YoungForest/en.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\"><span class=\"attr\">theme_config:</span></span><br><span class=\"line\">  <span class=\"attr\">menu:</span></span><br><span class=\"line\">    <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">    <span class=\"attr\">about:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">    <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span></span><br><span class=\"line\">    <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">    <span class=\"string\">中文:</span> <span class=\"string\">https://youngforest.github.io</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-language</span> <span class=\"comment\"># 图标可以去该网站搜索：https://fontawesome.com/v4.7/icons/</span></span><br></pre></td></tr></table></figure>\n<p>中文Hexo <code>_config.yml</code>配置文件:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> </span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">theme_config:</span></span><br><span class=\"line\">  <span class=\"attr\">menu:</span></span><br><span class=\"line\">    <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-home</span></span><br><span class=\"line\">    <span class=\"attr\">about:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-user</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-tags</span></span><br><span class=\"line\">    <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-th</span></span><br><span class=\"line\">    <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-archive</span></span><br><span class=\"line\">    <span class=\"attr\">English:</span> <span class=\"string\">https://youngforest.github.io/en/</span> <span class=\"string\">||</span> <span class=\"string\">fa</span> <span class=\"string\">fa-globe</span></span><br></pre></td></tr></table></figure>\n<p>这样中英文博客就可以在Menu互相外链了。</p>\n<p>部署博客，看看效果如何。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate -d</span><br></pre></td></tr></table></figure>\n<p>把HexoEn也推到远端，做保存和同步。注意，这里和deploy用的是同一个repo, 但是不同的分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove origin</span><br><span class=\"line\">git remote add origin git@github.com:YoungForest/en.git</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后的效果\"><a class=\"markdownIt-Anchor\" href=\"#最后的效果\"></a> 最后的效果</h2>\n<p>中文博客：<a href=\"https://youngforest.github.io\">https://youngforest.github.io</a><br />\n英文博客：<a href=\"https://youngforest.github.io/en/\">https://youngforest.github.io/en/</a></p>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "https://youngforest.github.io/2021/02/25/Google-AdSense-for-hexo-next/",
            "url": "https://youngforest.github.io/2021/02/25/Google-AdSense-for-hexo-next/",
            "title": "hexo next 配置 Google AdSense",
            "date_published": "2021-02-25T11:17:14.000Z",
            "content_html": "<h2 id=\"动机\"><a class=\"markdownIt-Anchor\" href=\"#动机\"></a> 动机</h2>\n<p>最近由于看了“半佛仙人”的一些视频，我对钱更感兴趣了。除了拿出积蓄的一部分投资A股外，还想着怎么提高被动收入。自己一直有写博客的习惯，写了有5年多，攒了一百余篇文章。虽然每日浏览量只有几十，但苍蝇再小也是肉。参照大佬的一些经验，尝试着通过投放广告来牟利。<br />\n一般网站的广告收入都是通过广告联盟接入的。简而言之就是，你只用出租广告位给广告联盟，他们在此投放针对用户的广告，然后按照流量给你钱。<br />\n面向国际的主要就是Google AdSense了，国内也有一些，如百度。<br />\n因为我本职是一名程序员，博客内容也不分国界，因此选择了Google AdSense作为广告商。Google AdSense的配置十分简单。</p>\n<h2 id=\"具体步骤\"><a class=\"markdownIt-Anchor\" href=\"#具体步骤\"></a> 具体步骤</h2>\n<p><a href=\"https://www.google.com/adsense/\">注册新的AdSense账号</a>.</p>\n<p>从Google AdSense上获取针对你网站的广告脚本，类似这样</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">data-ad-client</span>=<span class=\"string\">&quot;ca-pub-9*******6&quot;</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Option1:</p>\n<p>将广告脚本粘贴在<code>./themes/next/layout/_partials/head/head-unique.swig</code>的末尾。</p>\n<p>然后进行验证。一般几天就会通过，发邮件通知到你。</p>\n<p>通过审核后，需要去AdSense上进行配置。基本上把 <strong>自动广告</strong> 打开即可。</p>\n<p>Option2:</p>\n<p>在博客根目录下创建<code>_config.next.yml</code>文件，内容如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span> <span class=\"string\">source/_data/head.swig</span></span><br></pre></td></tr></table></figure>\n<p>创建<code>source/_data/head.swig</code>文件，内容如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">data-ad-client</span>=<span class=\"string\">&quot;ca-pub-9046219176772396&quot;</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9046219176772396&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Option2的优势在于对<code>next</code>不侵入，方便用Github Action做CD.</p>\n<h3 id=\"adstxt-的设置\"><a class=\"markdownIt-Anchor\" href=\"#adstxt-的设置\"></a> ads.txt 的设置</h3>\n<p>该文件放置在 <code>./source/</code> 下即可，和<code>_posts/</code> 同级。<br />\n<code>hexo d -g</code>部署后，对应的文件就会自动部署到<code>/public/</code>也就是你的博客上了。<br />\n其他需要生成放置在博客根目录下的文件也是类似的处理。</p>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "https://youngforest.github.io/2016/11/22/move-posts-from-cnblogs-to-Hexo/",
            "url": "https://youngforest.github.io/2016/11/22/move-posts-from-cnblogs-to-Hexo/",
            "title": "将博客园中的随笔迁移到Hexo",
            "date_published": "2016-11-22T01:42:23.000Z",
            "content_html": "<p>有关如何将其他博客上的文章迁移到<code>Hexo</code>上, <a href=\"https://hexo.io/docs/migration.html\">官方文档</a>给出了一些指引. 我也是根据官方文档进行了将自己之前在博客园中的随笔迁移到新博客上的尝试. 这个过程中遇到过一些问题, 再此给出解决方法.</p>\n<span id=\"more\"></span>\n<h2 id=\"未安装迁移插件\"><a class=\"markdownIt-Anchor\" href=\"#未安装迁移插件\"></a> 未安装迁移插件</h2>\n<p>博客园需要用rss迁移, 我根据文档, <code>$ npm install hexo-migrator-rss --save</code> 安装了相关的插件, 但在运行迁移命令<code>$ hexo migrate rss &lt;source&gt;</code>时, 报出了如下错误:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">undefined migrator plugin is not installed.</span><br><span class=\"line\">Installed migrator plugins:</span><br><span class=\"line\"></span><br><span class=\"line\">For more <span class=\"built_in\">help</span>, you can check the online docs: http://hexo.io/</span><br></pre></td></tr></table></figure>\n<p>我在<a href=\"http://stackoverflow.com/questions/34025076/when-running-hexo-migrate-rss-it-prompt-undefined-migrator-plugin-is-not-insta\">stackoverflow</a>上找到了答案. 原来是需要在博客所在的目录下运行安装插件命令<code>$ npm install hexo-migrator-rss --save</code>才可以. 看来还是我不熟悉nodejs的原因, 因为nodejs的包管理安装默认是局部的, 安装在当前文件夹下的.</p>\n<p>在博客所在目录下重新安装&quot;hexo-migrator-rss&quot;插件, 问题解决.</p>\n<h2 id=\"迁移后的文章只有摘要和超链接\"><a class=\"markdownIt-Anchor\" href=\"#迁移后的文章只有摘要和超链接\"></a> 迁移后的文章只有摘要和超链接</h2>\n<p>成功迁移后, 我兴奋地立即查看了迁移结果, 结果发现, 迁移的文章只有摘要和链接到博客园原文章的超链接, 就想下图一样. 这显然不是我想要的.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/13612111/20493077/5f16663e-b052-11e6-9a0f-256d35ca6110.png\" alt=\"迁移不完全\" /></p>\n<p>可以发现这是由于博客园导出的rss就是这样的. 通过观察, 我发现rss的链接只是一个包含文章信息的<code>xml</code>文件, 也就是说, 如果我们可以得到有完整文章信息的<code>xml</code>文件就可以了. 恰好博客园的备份功能可以提供这样的文件. 将rss链接换为备份文件的链接, 在运行迁移命令就可以将完整的文章迁移到Hexo了. 下面是完整迁移的效果.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/13612111/20493198/cc799b42-b052-11e6-9a0d-28f2e3f8e207.png\" alt=\"迁移完全\" /></p>\n<p>不过这样的迁移还是丢失了标签这样的信息, 不尽如人意.</p>\n<h2 id=\"奇怪的格式问题\"><a class=\"markdownIt-Anchor\" href=\"#奇怪的格式问题\"></a> 奇怪的格式问题</h2>\n<p>迁移成功后发现, 有两篇文章的格式变得很奇怪, 正文都很正常, 但引用, 插入代码的地方就会排版很乱. 但另一篇却很完美. 通过观察迁移的<code>xml</code>文件内容发现, 那两篇文章的内容是html格式的, 而另一篇是<code>Markdown</code>格式的. 这时我才想起, 最初的两篇随笔是用博客园推荐的<code>TinyMCE编辑器</code>编写的, 后来才转投<code>Markdown</code>的. 所以, Hexo当然不能完美的支持.</p>\n",
            "tags": [
                "Hexo"
            ]
        },
        {
            "id": "https://youngforest.github.io/2016/11/02/Hexo-github-building-personal-blog/",
            "url": "https://youngforest.github.io/2016/11/02/Hexo-github-building-personal-blog/",
            "title": "Hexo + github 搭建个人博客",
            "date_published": "2016-11-02T22:32:55.000Z",
            "content_html": "<h2 id=\"动机放在前面\"><a class=\"markdownIt-Anchor\" href=\"#动机放在前面\"></a> 动机(放在前面)</h2>\n<p>之前在cnblog上有个博客, 但是也不经常维护, 到现在满打满算也才有3篇随笔, 1个粉. 主要是因为自己没有写东西的习惯. 高中的时候记过一段时间的日记, 零零总总写了有大半本, 都是一些励志(自欺欺人)的东西, 写给自己看的.</p>\n<span id=\"more\"></span>\n<p>首先, 之前感觉没有可写的, 但现在觉得可写的还是挺多的.自己这两年也折腾了不少东西.但折腾完后, 说实话忘得挺快的, 下次自己再弄或者给别人处理相同问题的时候, 基本上又要重新来过. 记下来下之后, 不管是自己日后需要, 还是给小伙伴们借鉴都是极有用的.</p>\n<p>其次, 经高人安利, 经常写博客, 总结自己的工作学习, 和网络上的大牛们交流是学习计算机的基本技能. 写下来, 不仅可以系统地记录自己的学习历程, 供后日回顾, 或后人参考, 还可以督促自己坚持下来. 何乐而不为呢?</p>\n<p>最后, 最近在搞编译课设的时候, 看到了<a href=\"http://jcf94.com/2016/02/21/2016-02-21-pl0/\">这篇博客</a>. 学习编译知识的同时, 感觉这个博客设计的很美观, 博主也很nice. 了解到使用<code>Hexo</code>搭建的时候, 便有了自己搭建博客的想法, 现在也终于有时间实现了.</p>\n<h2 id=\"介绍hexo\"><a class=\"markdownIt-Anchor\" href=\"#介绍hexo\"></a> 介绍<code>Hexo</code></h2>\n<p>有很多专门用来搭建博客的框架, 如 WordPress, Jekyll, Octopress, Joomla等. 这些我都没有用过, 就不评论了. 事实上, 这是我第一次搭建博客的经历, 也算是一种猿粪吧, 遇上了Hexo.</p>\n<p>这里我就自己的感受, 说说Hexo的优点:</p>\n<ol>\n<li>文档完善.</li>\n<li>中文支持好, 包括文档各个方面. 事实上, 开发者就是中国人.</li>\n<li>主题丰富.(作为一个看脸的人)</li>\n</ol>\n<h2 id=\"搭建过程\"><a class=\"markdownIt-Anchor\" href=\"#搭建过程\"></a> 搭建过程</h2>\n<h3 id=\"本地hexo安装配置\"><a class=\"markdownIt-Anchor\" href=\"#本地hexo安装配置\"></a> 本地Hexo安装配置</h3>\n<p>关于如何搭建, 我这里推荐官方的<a href=\"https://hexo.io/zh-cn/docs/\">文档</a>. 文档中说的已经很详细了, 而且遇到问题的话, 还可以直接在文档最下面的讨论区提问, 貌似遇到奇奇怪怪问题的人挺多的, 我遇到问题一般靠谷歌, 事实上, 很多时候都被谷歌引到讨论区或者文档中的<a href=\"https://hexo.io/zh-cn/docs/troubleshooting.html\">Troubleshoot</a>了.</p>\n<p>我安装hexo使用的环境的Ubuntu14.04, 在安装hexo的时候<code>$ npm install -g hexo-cli</code>, 会遇到这样的问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh: 1: node: not found</span><br><span class=\"line\">npm WARN This failure might be due to the use of legacy binary &quot;node&quot;</span><br><span class=\"line\">npm WARN For further explanations, please read</span><br><span class=\"line\">/usr/share/doc/nodejs/README.Debian</span><br></pre></td></tr></table></figure>\n<p>通过搜索可以很快找到解决问题的<a href=\"http://stackoverflow.com/questions/21168141/cannot-install-packages-using-node-package-manager-in-ubuntu\">方法</a>. 只需要<code>sudo apt-get install nodejs-legacy</code>就可以了.</p>\n<p>出现这个问题的原因是, debian社区发现, nodejs解释器的命令是<code>node</code>. 然而, 这个命令和其他的包有命名空间的冲突, 比如 node 包中的 ax25-node. 所以, 他们决定把nodejs解释器命令改为<code>nodejs</code>, 大家需要用到nodejs的解释器时需要<code>nodejs</code>命令, 而不是<code>node</code>. 但是这样就会带来向后兼容的问题, 之前的nodejs脚本中的命令还用的是<code>node</code>, 其他Linux发行版也一直在用<code>node</code>. 所以他们想了一个兼容的方法, 创建一个符号链接, 将/usr/bin/node链接到/usr/bin/nodejs. 这个工作又<code>node-legacy</code>包来实现, 不推荐用户自己手动链接. 并且他们也规定, 'nodejs’的源代码包应该也提供一个<code>node-legacy</code>的可执行包. 这样就&quot;完美&quot;地解决了兼容问题.</p>\n<p>由此看来, debian系的发布版都会出现这个问题.</p>\n<h3 id=\"发布到github上\"><a class=\"markdownIt-Anchor\" href=\"#发布到github上\"></a> 发布到github上</h3>\n<p>在github上新建一个库, 库名为 “{your name}.github.io”, 比如, 我的是&quot;<a href=\"http://youngforest.github.io\">youngforest.github.io</a>&quot;. 事实上, 以这样的格式命名, github会默认配置好你的<code>[GitHub Pages](https://pages.github.com/)</code>, 默认发布到&quot;https://{your name}.github.io/“, 比如我的就是&quot;<a href=\"https://youngforest.github.io/\">https://youngforest.github.io/</a>”.<br />\n当然, 如果你不这样命名的话, 自己也可去库中的设置中设置发布<code>GitHub Page</code>.</p>\n<p>在本地的博客目录下, 运行<code>hexo generate</code>, 即可在<code>public/</code>中生成你博客的静态页面, 在这个文件夹下, 将其中所有的文件推到你在github上建好的库就可以了.</p>\n<p>关于具体如何将本地的文件夹推到新建好的库, 在你新建好空库的时候, github应该会告诉你.</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/13612111/20461580/713552e6-af3d-11e6-8078-a8c570e594af.png\" alt=\"initial a repository in github\" /></p>\n<p>如果你想要一条命令完成github部署的话, 可以参考<a href=\"https://hexo.io/zh-cn/docs/deployment.html\">相关文档</a>.</p>\n<p>我在运行<code>hexo deploy</code>是会遇到这样的错误<code>ERROR Deployer not found: git</code>.</p>\n<p>查了半天在<a href=\"https://github.com/hexojs/hexo/issues/1040\">hexo的isuue</a>中找到了解决方法. 在bash中运行如下命令就好了.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-archive --save</span><br><span class=\"line\">npm install hexo-generator-category --save</span><br><span class=\"line\">npm install hexo-generator-tag --save</span><br><span class=\"line\">npm install hexo-server --save</span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-renderer-marked@0.2 --save</span><br><span class=\"line\">npm install hexo-renderer-stylus@0.2 --save</span><br><span class=\"line\">npm install hexo-generator-feed@1 --save</span><br><span class=\"line\">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure>\n<p>当你在浏览器中访问你的&quot;GitHub Pages&quot;时, 就会看到部署好的博客.<br />\n在<a href=\"https://youngforest.github.io/\">这里</a>可以看到我部署好的博客.</p>\n",
            "tags": [
                "Hexo"
            ]
        }
    ]
}