{
    "version": "https://jsonfeed.org/version/1",
    "title": "YoungForest's blog • All posts by \"linux\" tag",
    "description": "佛系更新；生活、学习",
    "home_page_url": "https://youngforest.github.io",
    "items": [
        {
            "id": "https://youngforest.github.io/2021/03/18/Ubuntu-vpn-cannot-access-public-resource/",
            "url": "https://youngforest.github.io/2021/03/18/Ubuntu-vpn-cannot-access-public-resource/",
            "title": "Ubuntu OpenVPN 无法获取公网资源",
            "date_published": "2021-03-18T11:20:13.000Z",
            "content_html": "<p>由于科研需求，我需要连接杭州研究院的VPN，才能使用显卡做神经网络的训练任务。<br />\n然而在Ubunut 18.04配置好OpenVPN后，发现一个难题：连上VPN后无法上外网（百度等网站，不是墙外的网站，而是相对局域网内网的“外网”），断开VPN后可以连外网，但无法连接杭研院的资源。鉴于工作中，外网和杭研院内网基本缺一不可，我花了2天时间调研和修复改问题。而且其他同学使用VPN并没有类似问题，所以我认为是<code>Ubuntu</code>独特的问题。修复的操作很简单，但定位到问题的过程十分坎坷。</p>\n<h2 id=\"现象整理\"><a class=\"markdownIt-Anchor\" href=\"#现象整理\"></a> 现象整理</h2>\n<p>连接VPN后，可以ping通baidu的IP，但浏览器无法连接baidu，<a href=\"http://xn--pingbaidu-zz6n858p0ufslzom6ak32f.com\">也无法直接ping通baidu.com</a>。浏览器只能打开杭研院和北航内部的网站。<br />\n初步判断是网络上DNS服务器的问题，但调研之后发现DNS的配置并无问题。<br />\n猜测是访问外部资源时，理应的DNS解析并没有办法完成。</p>\n<p>最后在网上查了半天，才发现真正的问题（VPN本地配置问题）和解决方案。</p>\n<h2 id=\"解决方案\"><a class=\"markdownIt-Anchor\" href=\"#解决方案\"></a> 解决方案</h2>\n<p><a href=\"https://askubuntu.com/a/713066/558370\">网上最类似的一个问题和解决方案</a></p>\n<p>由于我是Ubuntu 18.04, 并不大一样。<br />\n在我这里给出我的完整解决方案，以供大家参考。</p>\n<p>打开VPN的配置。</p>\n<p><img src=\"/images/vpn1.png\" alt=\"Step 1\" /></p>\n<p><img src=\"/images/vpn2.png\" alt=\"Step 2\" /></p>\n<p>勾选“Use this connection only for resources on its network&quot;</p>\n<p><img src=\"/images/vpn2.png\" alt=\"Step 2\" /></p>\n<p>Apply后，重新连接VPN即可解决问题。</p>\n<h2 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h2>\n<p>下一步，我还会试着在Ubuntu上装个跳板机。这样我的Mac或许可以通过该跳板机连入杭研院的机器。 (已经成功啦，下篇更新在<a href=\"https://youngforest.github.io/2021/03/26/SSH-proxy-by-jump-server/\">这里</a>)。</p>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://youngforest.github.io/2016/11/02/terminal-proxy-configuration/",
            "url": "https://youngforest.github.io/2016/11/02/terminal-proxy-configuration/",
            "title": "实现terminal代理",
            "date_published": "2016-11-02T23:30:00.000Z",
            "content_html": "<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\"></a> 问题</h2>\n<p>作为一名Linuxer，熟练使用终端是一项必备技能，但终端中有时下载安装功能速度很慢，令人崩溃.我自然而然想到了可否加个代理,提高速度。我之前一直用shadowsocks,浏览器使用switchyProxy,实现了初步的科学上网。那么,终端中是否有类似的工具呢？答案是肯定的。通过科学搜索，我成功解决了terminal中的科学上网问题，在此总结一下，希望可以帮到大家。</p>\n<span id=\"more\"></span>\n<h2 id=\"准备工具\"><a class=\"markdownIt-Anchor\" href=\"#准备工具\"></a> 准备工具</h2>\n<p>shadowsocks, polipo</p>\n<h3 id=\"shadowsocks\"><a class=\"markdownIt-Anchor\" href=\"#shadowsocks\"></a> shadowsocks</h3>\n<p><a href=\"https://shadowsocks.org/en/download/clients.html\">Download and Install Client</a></p>\n<h4 id=\"install-command-line-client\"><a class=\"markdownIt-Anchor\" href=\"#install-command-line-client\"></a> Install Command-line Client</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\">apt-get install shadowsocks-libev</span><br><span class=\"line\">cpan Net::Shadowsocks</span><br></pre></td></tr></table></figure>\n<p>shadowsocks的配置可以参考<a href=\"http://bblove.me/2015/03/09/use-ss/\">这篇文章</a>, 我很久之前配置的,这里就不回忆了(忘得差不多了).</p>\n<p>让我们直接从polipo开始吧.</p>\n<h3 id=\"polipo\"><a class=\"markdownIt-Anchor\" href=\"#polipo\"></a> polipo</h3>\n<p>polipo有多种安装方式,可以使用Python的包管理工具pip直接安装,也可以用各个操作系统的包管理工具安装.我更推荐后者,因为个人认为这样更好管理罢了.这里以Ubuntu为例.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-cache search polipo</span><br><span class=\"line\"></span><br><span class=\"line\">adzapper - proxy advertisement zapper add-on</span><br><span class=\"line\">polipo - lightweight, caching web proxy</span><br><span class=\"line\">polipo-dbg - debug package for polipo</span><br></pre></td></tr></table></figure>\n<p>第二个包就是给我们这些小白使用的,安装它</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install polipo</span><br></pre></td></tr></table></figure>\n<p>安装好之后默认自启的,<br />\n我们要先修改它的配置文件(/etc/polipo/config):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logSyslog = true</span><br><span class=\"line\">logFile = /var/log/polipo/polipo.log</span><br><span class=\"line\">logLevel = 4 # 没有这句话的话`sudo polipo -v`会出现无法查看log文件的情况</span><br><span class=\"line\"></span><br><span class=\"line\">socksParentProxy = &quot;localhost:1080&quot; # 这里假设shadowsocks的local port为1080</span><br><span class=\"line\">socksProxyType = socks5 # 是不是和SwitchyProxy的设置很像?</span><br></pre></td></tr></table></figure>\n<p>具体各个配置选项可以参考文件<code>/usr/share/doc/polipo/examples/config.sample</code>.</p>\n<p>配置好之后,我们需要重启polipo服务(每次修改配置文件需要重启服务才能加载)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service polipo stop;</span><br><span class=\"line\">sudo service polipo start;</span><br></pre></td></tr></table></figure>\n<p>或者直接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service polipo restart;</span><br></pre></td></tr></table></figure>\n<p>可以用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo polipo -v</span><br></pre></td></tr></table></figure>\n<p>查看具体各个配置项,可以看到我们之前的更改生效了.</p>\n<h2 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\"></a> 测试</h2>\n<p>配置完成后,怎么才知道自己是否已经可以科学上网了呢?<br />\n可以使用以下命令:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ curl -i http://ip.cn</span><br><span class=\"line\">当前 IP：60.xxx.xxx.x 来自：中国北京北京 xxx/电信</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ http_proxy=http://localhost:8123 curl -i http://ip.cn # polipo的默认端口为8123,如有需要可以自行改动</span><br><span class=\"line\">当前 IP：xxx.xxx.xxx.xx0 来自：美国加利福尼亚州洛杉矶</span><br></pre></td></tr></table></figure>\n<p>这样就算成功了.</p>\n<p>最近发现&quot;<a href=\"http://ip.cn\">ip.cn</a>&quot;这个网站不能用了，500访问错误。可以将其替换为“<a href=\"http://ipinfo.io/ip%E2%80%9D%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86i%EF%BC%8C%E8%BF%99%E6%98%AF%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%BF%94%E5%9B%9E%E4%BD%A0%E7%9A%84%E5%85%AC%E7%BD%91IP%E7%9A%84%E7%BD%91%E7%AB%99%E3%80%82\">ipinfo.io/ip”就可以了i，这是另一个返回你的公网IP的网站。</a><br />\n还有一些其他的网站提供类似的返回IP的服务:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl ifconfig.me</span><br><span class=\"line\">curl icanhazip.com</span><br><span class=\"line\">curl ipecho.net/plain</span><br><span class=\"line\">curl ifconfig.co</span><br></pre></td></tr></table></figure>\n<p>从浏览器中获得自己公网IP的方法:</p>\n<ul>\n<li><a href=\"https://www.google.com/search?q=what%20is%20my%20IP%20address\">Google</a></li>\n<li><a href=\"https://duckduckgo.com/?q=ip\">DuckDuckGo</a></li>\n<li><a href=\"https://www.wolframalpha.com/input/?i=what+is+my+ip+address\">Wolframalpha</a>, 推荐</li>\n</ul>\n<h2 id=\"更进一步\"><a class=\"markdownIt-Anchor\" href=\"#更进一步\"></a> 更进一步</h2>\n<p>每次都打这么长的命令<code>http_proxy=http://localhost:8123</code>着实不是我们想要的,为了方便使用,可以在终端键入<code>export http_proxy=http://localhost:8123</code>,表示对该终端所有命令生效;或者更进一步,在.bashrc中加入<code>export http_proxy=http://localhost:8123</code>,每次启动终端时自动执行.如果不想要每次都走代理,可以像我一样,在.bashrc中加入<code>alias hp=&quot;http_proxy=http://localhost:8123&quot;</code>,每次需要代理时,只需要在命令前面加<code>hp </code>就好了.</p>\n<h2 id=\"为git配置代理\"><a class=\"markdownIt-Anchor\" href=\"#为git配置代理\"></a> 为git配置代理</h2>\n<p>git clone的速度很是感人, 只有几十k, 为git配置代理也是很简单的.</p>\n<p>Add the following setting to the http items of .gitconfig files.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[http]</span><br><span class=\"line\">proxy = &lt;address of the proxy server&gt;:&lt;port of the proxy server&gt;</span><br></pre></td></tr></table></figure>\n<p>You can also configure it using the following config command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy &lt;address of the proxy server&gt;:&lt;port of the proxy server&gt;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1\">ssh形式连接Github</a></p>\n<p>在终端中尽情享受科学上网吧!</p>\n",
            "tags": [
                "Linux"
            ]
        }
    ]
}